"use strict";(self.webpackChunksoowgood_v2=self.webpackChunksoowgood_v2||[]).push([[2260],{6516:(x,h,l)=>{l.d(h,{Vn:()=>u,Is:()=>c,vs:()=>b,Y0:()=>g,UE:()=>y,Ix:()=>S});var d=l(7999),r=(()=>{return(t=r||(r={}))[t.Paid=1]="Paid",t[t.Due=2]="Due",t[t.FailedOrCancelled=3]="FailedOrCancelled",r;var t})();(0,d.Uoq)(r);var s=(()=>{return(t=s||(s={}))[t.Pending=1]="Pending",t[t.Confirmed=2]="Confirmed",t[t.InProgress=3]="InProgress",t[t.Completed=4]="Completed",t[t.Cancelled=5]="Cancelled",t[t.Failed=6]="Failed",s;var t})();(0,d.Uoq)(s);var u=(()=>{return(t=u||(u={}))[t.New=1]="New",t[t.Followup=2]="Followup",t[t.ReportShow=3]="ReportShow",t[t.Emargency=4]="Emargency",u;var t})();(0,d.Uoq)(u);var o=(()=>{return(t=o||(o={}))[t.ProfilePicture=1]="ProfilePicture",t[t.DoctorDegreeDoc=2]="DoctorDegreeDoc",t[t.DoctIdentityDoc=3]="DoctIdentityDoc",t[t.DoctorSpecialityDoc=4]="DoctorSpecialityDoc",t[t.Prescription=5]="Prescription",t[t.PatientPreviousDocuments=6]="PatientPreviousDocuments",o;var t})();(0,d.Uoq)(o);var c=(()=>{return(t=c||(c={}))[t.Chamber=1]="Chamber",t[t.Online=2]="Online",t[t.PhysicalVisit=3]="PhysicalVisit",t[t.OnDemand=4]="OnDemand",t[t.OnlineRT=5]="OnlineRT",c;var t})();(0,d.Uoq)(c);var b=(()=>{return(t=b||(b={}))[t.Dr=1]="Dr",t[t.AsstProfDr=2]="AsstProfDr",t[t.AssocProfDr=3]="AssocProfDr",t[t.ProfDr=4]="ProfDr",b;var t})();(0,d.Uoq)(b);var _=(()=>{return(t=_||(_={}))[t.Doctor=1]="Doctor",t[t.Agent=2]="Agent",t[t.Patient=3]="Patient",t[t.Hospital=4]="Hospital",_;var t})();(0,d.Uoq)(_);var g=(()=>{return(t=g||(g={}))[t.Male=1]="Male",t[t.Female=2]="Female",t[t.Others=3]="Others",g;var t})();(0,d.Uoq)(g);var y=(()=>{return(t=y||(y={}))[t.Single=1]="Single",t[t.Maried=2]="Maried",y;var t})();(0,d.Uoq)(y);var A=(()=>{return(t=A||(A={}))[t.New=0]="New",t[t.Send=1]="Send",t[t.Varified=2]="Varified",t[t.Cancel=3]="Cancel",t[t.TimeExpired=4]="TimeExpired",A;var t})();(0,d.Uoq)(A);var S=(()=>{return(t=S||(S={}))[t.Regular=1]="Regular",t[t.Occasional=2]="Occasional",S;var t})();(0,d.Uoq)(S)},9466:(x,h,l)=>{l.d(h,{H:()=>e});var d=l(4650),r=l(7999);let e=(()=>{class s{constructor(u){this.restService=u,this.apiName="Default",this.cancellAppointment=(n,o,a,c)=>this.restService.request({method:"POST",url:`/api/app/appointment/cancell-appointment/${n}`,params:{cancelByid:o,cancelByRole:a}},{apiName:this.apiName,...c}),this.create=(n,o)=>this.restService.request({method:"POST",url:"/api/app/appointment",body:n},{apiName:this.apiName,...o}),this.get=(n,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/${n}`},{apiName:this.apiName,...o}),this.getAppCountByRealTimeConsultancy=(n,o)=>this.restService.request({method:"GET",url:"/api/app/appointment/app-count-by-real-time-consultancy",params:{aptDate:n}},{apiName:this.apiName,...o}),this.getAppCountByScheduleIdSessionId=(n,o,a)=>this.restService.request({method:"GET",url:"/api/app/appointment/app-count-by-schedule-id-session-id",params:{scheduleId:n,sessionId:o}},{apiName:this.apiName,...a}),this.getAppointmentCountForDoctorWithSearchFilter=(n,o,a)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-count-for-doctor-with-search-filter/${n}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline}},{apiName:this.apiName,...a}),this.getAppointmentCountForPatientWithSearchFilter=(n,o,a,c)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-count-for-patient-with-search-filter/${n}`,params:{role:o,name:a.name,consultancyType:a.consultancyType,specialityId:a.specialityId,specializationId:a.specializationId,appointmentStatus:a.appointmentStatus,fromDate:a.fromDate,toDate:a.toDate,isCurrentOnline:a.isCurrentOnline}},{apiName:this.apiName,...c}),this.getAppointmentListByDoctorId=(n,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-doctor-id/${n}`},{apiName:this.apiName,...o}),this.getAppointmentListByPatientId=(n,o,a)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-patient-id/${n}`,params:{role:o}},{apiName:this.apiName,...a}),this.getAppointmentListForDoctorWithSearchFilter=(n,o,a,c)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-for-doctor-with-search-filter/${n}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline,offset:a.offset,limit:a.limit,pageNo:a.pageNo,pageSize:a.pageSize,sortBy:a.sortBy,sortOrder:a.sortOrder,isDesc:a.isDesc}},{apiName:this.apiName,...c}),this.getAppointmentListForPatientWithSearchFilter=(n,o,a,c,C)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-for-patient-with-search-filter/${n}`,params:{role:o,name:a.name,consultancyType:a.consultancyType,specialityId:a.specialityId,specializationId:a.specializationId,appointmentStatus:a.appointmentStatus,fromDate:a.fromDate,toDate:a.toDate,isCurrentOnline:a.isCurrentOnline,offset:c.offset,limit:c.limit,pageNo:c.pageNo,pageSize:c.pageSize,sortBy:c.sortBy,sortOrder:c.sortOrder,isDesc:c.isDesc}},{apiName:this.apiName,...C}),this.getAppointmentListWithSearchFilter=(n,o,a,c,C,b,D,_,T)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-with-search-filter/${n}`,params:{name:o,consultancy:a,fromDate:c,toDate:C,aptStatus:b,skipValue:D,currentLimit:_}},{apiName:this.apiName,...T}),this.getLeftBookingCountBySessionIdAndScheduleId=(n,o,a)=>this.restService.request({method:"GET",url:"/api/app/appointment/left-booking-count",params:{sessionId:n,scheduleId:o}},{apiName:this.apiName,...a}),this.getList=n=>this.restService.request({method:"GET",url:"/api/app/appointment"},{apiName:this.apiName,...n}),this.getListAppointmentListByAdmin=n=>this.restService.request({method:"GET",url:"/api/app/appointment/appointment-list-by-admin"},{apiName:this.apiName,...n}),this.getPatientListByDoctorId=(n,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/patient-list-by-doctor-id/${n}`},{apiName:this.apiName,...o}),this.getSearchedPatientListByDoctorId=(n,o,a)=>this.restService.request({method:"GET",url:`/api/app/appointment/searched-patient-list-by-doctor-id/${n}`,params:{name:o}},{apiName:this.apiName,...a}),this.update=(n,o)=>this.restService.request({method:"PUT",url:"/api/app/appointment",body:n},{apiName:this.apiName,...o}),this.updateAppointmentPaymentStatus=(n,o,a)=>this.restService.request({method:"PUT",url:`/api/app/appointment/appointment-payment-status/${o}`,params:{appCode:n}},{apiName:this.apiName,...a}),this.updateCallConsultationAppointment=(n,o)=>this.restService.request({method:"PUT",url:"/api/app/appointment/call-consultation-appointment",params:{appCode:n}},{apiName:this.apiName,...o}),this.testAcTokenByInput=(n,o)=>this.restService.request({method:"POST",responseType:"text",url:"/api/app/appointment/test-ac-token",body:n},{apiName:this.apiName,...o}),this.testBuildTokenWithUIDByInput=(n,o)=>this.restService.request({method:"POST",responseType:"text",url:"/api/app/appointment/test-build-token-with-uID",body:n},{apiName:this.apiName,...o}),this.testBuildTokenWithUserAccountBy_appIdAnd_appCertificateAnd_channelNameAnd_account=(n,o,a,c,C)=>this.restService.request({method:"POST",responseType:"text",url:`/api/app/appointment/test-build-token-with-user-account/${n}`,params:{_appCertificate:o,_channelName:a,_account:c}},{apiName:this.apiName,...C})}}return s.\u0275fac=function(u){return new(u||s)(d.LFG(r.vgb))},s.\u0275prov=d.Yz7({token:s,factory:s.\u0275fac,providedIn:"root"}),s})()},7132:(x,h,l)=>{l.d(h,{t:()=>e});var d=l(6895),r=l(4650);let e=(()=>{class s{}return s.\u0275fac=function(u){return new(u||s)},s.\u0275mod=r.oAB({type:s}),s.\u0275inj=r.cJS({imports:[d.ez]}),s})()},2462:(x,h,l)=>{l.d(h,{p:()=>S});var d=l(5649),r=l(4006),e=l(4650),s=l(6895);function f(p,t){1&p&&(e.TgZ(0,"p",32),e._uU(1," Please enter patient name. "),e.qZA())}function u(p,t){1&p&&(e.TgZ(0,"p",32),e._uU(1," Patient name should contain only letters and numbers at the end (optional). "),e.qZA())}function n(p,t){1&p&&(e.TgZ(0,"p",32),e._uU(1," Patient name should be at least 3 characters long "),e.qZA())}function o(p,t){1&p&&(e.TgZ(0,"p",32),e._uU(1," Please enter patient age. "),e.qZA())}function a(p,t){1&p&&(e.TgZ(0,"p",32),e._uU(1," Age should be a number. "),e.qZA())}function c(p,t){1&p&&(e.TgZ(0,"p",32),e._uU(1," You must enter a valid mobile number! "),e.qZA())}function C(p,t){1&p&&(e.TgZ(0,"p",32),e._uU(1," Mobile number should have exactly 11 digits and follow the Bangladeshi format! "),e.qZA())}function b(p,t){1&p&&(e.TgZ(0,"p",33),e._uU(1," Please select gender! "),e.qZA())}function D(p,t){1&p&&(e.TgZ(0,"p",33),e._uU(1," Please select blood group! "),e.qZA())}let _=(()=>{class p{constructor(m){this.fb=m,this.inputConfigs=d.cv,this.isLoading=!1,this.formSubmitted=!1}ngOnInit(){this.loadForm()}loadForm(){this.createPatientForm=this.fb.group({patientName:["",r.kI.required],age:["",r.kI.required],gender:["",r.kI.required],bloodGroup:["",r.kI.required],patientMobileNo:["",r.kI.required],patientEmail:[this.profileInfo?.email||"admin@gmail.com",r.kI.required],createdBy:[this.profileInfo.fullName,r.kI.required],creatorEntityId:[this.profileInfo.id,r.kI.required]})}}return p.\u0275fac=function(m){return new(m||p)(e.Y36(r.qu))},p.\u0275cmp=e.Xpm({type:p,selectors:[["app-create-patient"]],decls:65,vars:10,consts:[[1,""],[1,"bg-white"],[1,"pl-10","pt-4","pb-4","border-b-gray-300","border-[1px]"],[1,"font-Roboto","text-[22px]","font-semibold"],[3,"formGroup"],[1,"px-10","py-6","grid","grid-cols-1","md:grid-cols-2","gap-5"],[1,"mb-5"],["for","name",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","formControlName","patientName","type","text","name","patientName","id","patientName","placeholder","Full Name",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["class","text-red-600 text-sm",4,"ngIf"],[1,"w-full"],["for","age",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","maxlength","3","minlength","1","formControlName","age","id","age","placeholder","Age",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["for","patientMobileNo",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","maxlength","11","minlength","11","formControlName","patientMobileNo","id","patientMobileNo","placeholder","Patient Mobile No",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["for","date",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["formControlName","gender","name","gender","id","gender",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-2","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["value","0",1,"font-semibold","text-gray-500"],["class","text-[14px] text-red-600",4,"ngIf"],["for","bloodGroup",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["formControlName","bloodGroup","name","bloodGroup","id","bloodGroup",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-2","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["value","A+",1,"font-semibold","text-gray-500"],["value","A-",1,"font-semibold","text-gray-500"],["value","B+",1,"font-semibold","text-gray-500"],["value","B-",1,"font-semibold","text-gray-500"],["value","o+",1,"font-semibold","text-gray-500"],["value","o-",1,"font-semibold","text-gray-500"],["value","Ab+",1,"font-semibold","text-gray-500"],["value","Ab-",1,"font-semibold","text-gray-500"],["value","others",1,"font-semibold","text-gray-500"],[1,"px-10","pb-10"],[1,"btn-secondary"],[1,"text-red-600","text-sm"],[1,"text-[14px]","text-red-600"]],template:function(m,i){if(1&m&&(e.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"h1",3),e._uU(4,"Patient Information"),e.qZA()(),e.TgZ(5,"form",4)(6,"div",5)(7,"div",6)(8,"label",7),e._uU(9," Full Name "),e.qZA(),e._UZ(10,"input",8),e.YNc(11,f,2,0,"p",9),e.YNc(12,u,2,0,"p",9),e.YNc(13,n,2,0,"p",9),e.qZA(),e.TgZ(14,"div",10)(15,"div",6)(16,"label",11),e._uU(17," Age "),e.qZA(),e._UZ(18,"input",12),e.YNc(19,o,2,0,"p",9),e.YNc(20,a,2,0,"p",9),e.qZA()(),e.TgZ(21,"div",10)(22,"div",6)(23,"label",13),e._uU(24," Patient Mobile No "),e.qZA(),e._UZ(25,"input",14),e.YNc(26,c,2,0,"p",9),e.YNc(27,C,2,0,"p",9),e.qZA()(),e.TgZ(28,"div",10)(29,"div",6)(30,"label",15),e._uU(31," Select gender "),e.qZA(),e.TgZ(32,"select",16)(33,"option",17),e._uU(34,"Select gender "),e.qZA()(),e.YNc(35,b,2,0,"p",18),e.qZA()(),e.TgZ(36,"div",10)(37,"div",6)(38,"label",19),e._uU(39," Select blood group "),e.qZA(),e.TgZ(40,"select",20)(41,"option",17),e._uU(42,"Select blood group "),e.qZA(),e.TgZ(43,"option",21),e._uU(44,"A+ "),e.qZA(),e.TgZ(45,"option",22),e._uU(46,"A- "),e.qZA(),e.TgZ(47,"option",23),e._uU(48,"B+ "),e.qZA(),e.TgZ(49,"option",24),e._uU(50,"B- "),e.qZA(),e.TgZ(51,"option",25),e._uU(52,"o+ "),e.qZA(),e.TgZ(53,"option",26),e._uU(54,"o- "),e.qZA(),e.TgZ(55,"option",27),e._uU(56,"Ab+ "),e.qZA(),e.TgZ(57,"option",28),e._uU(58,"Ab- "),e.qZA(),e.TgZ(59,"option",29),e._uU(60,"others "),e.qZA()(),e.YNc(61,D,2,0,"p",18),e.qZA()()()(),e.TgZ(62,"div",30)(63,"button",31),e._uU(64,"Submit"),e.qZA()()()()),2&m){let N,P,v,Z,U,q,O,E,F;e.xp6(5),e.Q6J("formGroup",i.createPatientForm),e.xp6(6),e.Q6J("ngIf",i.formSubmitted&&(null==(N=i.createPatientForm.get("patientName"))?null:N.touched)&&(null==(N=i.createPatientForm.get("patientName"))?null:N.hasError("required"))),e.xp6(1),e.Q6J("ngIf",i.formSubmitted&&(null==(P=i.createPatientForm.get("patientName"))?null:P.touched)&&(null==(P=i.createPatientForm.get("patientName"))?null:P.hasError("pattern"))),e.xp6(1),e.Q6J("ngIf",i.formSubmitted&&(null==(v=i.createPatientForm.get("patientName"))?null:v.touched)&&(null==(v=i.createPatientForm.get("patientName"))?null:v.hasError("invalidName"))),e.xp6(6),e.Q6J("ngIf",i.formSubmitted&&(null==(Z=i.createPatientForm.get("age"))?null:Z.touched)&&(null==(Z=i.createPatientForm.get("age"))?null:Z.hasError("required"))),e.xp6(1),e.Q6J("ngIf",i.formSubmitted&&(null==(U=i.createPatientForm.get("age"))?null:U.touched)&&(null==(U=i.createPatientForm.get("age"))?null:U.hasError("pattern"))),e.xp6(6),e.Q6J("ngIf",i.formSubmitted&&(null==(q=i.createPatientForm.get("patientMobileNo"))?null:q.touched)&&(null==(q=i.createPatientForm.get("patientMobileNo"))?null:q.hasError("required"))),e.xp6(1),e.Q6J("ngIf",i.formSubmitted&&(null==(O=i.createPatientForm.get("patientMobileNo"))?null:O.touched)&&(null==(O=i.createPatientForm.get("patientMobileNo"))?null:O.hasError("pattern"))),e.xp6(8),e.Q6J("ngIf",i.formSubmitted&&(null==(E=i.createPatientForm.get("gender"))?null:E.touched)&&"0"===(null==(E=i.createPatientForm.get("gender"))?null:E.value)),e.xp6(26),e.Q6J("ngIf",i.formSubmitted&&(null==(F=i.createPatientForm.get("bloodGroup"))?null:F.touched)&&"0"===(null==(F=i.createPatientForm.get("bloodGroup"))?null:F.value))}},dependencies:[s.O5,r._Y,r.YN,r.Kr,r.Fj,r.EJ,r.JJ,r.JL,r.wO,r.nD,r.sg,r.u]}),p})();var T=l(2510),g=l(9466),I=l(629),y=l(5412),w=l(6084);function A(p,t){if(1&p){const m=e.EpF();e.TgZ(0,"button",20),e.NdJ("click",function(){e.CHM(m);const N=e.oxw();return e.KtG(N.addNewPatient("agent"))}),e._UZ(1,"i",21),e._uU(2,"Add New Patient "),e.qZA()}}function B(p,t){if(1&p){const m=e.EpF();e.TgZ(0,"tr",22)(1,"td",23),e._uU(2),e.qZA(),e.TgZ(3,"td",23),e._uU(4),e.qZA(),e.TgZ(5,"td",23),e._uU(6),e.qZA(),e.TgZ(7,"td",23),e._uU(8),e.qZA(),e.TgZ(9,"td",23),e._uU(10),e.qZA(),e.TgZ(11,"td",23)(12,"span",24),e.NdJ("click",function(){const P=e.CHM(m).$implicit,v=e.oxw();return e.KtG(v.goToPatientProfile(P))}),e._uU(13," View Profile "),e.qZA()()()}if(2&p){const m=t.$implicit,i=t.index;e.xp6(2),e.hij(" ",i+1," "),e.xp6(2),e.hij(" ",m.patientName," "),e.xp6(2),e.hij(" ",m.patientMobileNo," "),e.xp6(2),e.hij(" ",m.patientEmail," "),e.xp6(2),e.hij(" ",m.patientLocation?m.patientLocation:"---"," ")}}let S=(()=>{class p{constructor(m,i,N,P,v){this.Router=m,this.AppointmentService=i,this.NormalAuth=N,this.dialog=P,this.PatientProfileService=v,this.patientLoader=!1}ngOnInit(){let m=this.NormalAuth.authInfo();if(this.userInfo=m,m.id){this.patientLoader=!0;try{"doctor"===m.userType?this.AppointmentService.getPatientListByDoctorId(m.id).subscribe(i=>{this.patientList=i,this.patientLoader=!1}):"agent"===m.userType&&console.log("Data Nai")}catch(i){console.log(i),this.patientLoader=!1}}}goToPatientProfile(m){this.Router.navigate(["/doctor/patients/patient-details/",m.patientProfileId,m.doctorProfileId])}addNewPatient(m){this.dialog.open(_,{width:"40vw"}).afterClosed().subscribe(N=>{})}onSearchChange(m){}}return p.\u0275fac=function(m){return new(m||p)(e.Y36(T.F0),e.Y36(g.H),e.Y36(I.e),e.Y36(y.uw),e.Y36(w.j))},p.\u0275cmp=e.Xpm({type:p,selectors:[["app-public-patients"]],decls:34,vars:2,consts:[[1,"doctor-dashboard_midcontent_container","w-full"],[1,"flex","items-center","justify-left","border-[1px]"],[1,"w-full","h-full","bg-white"],[1,"relative","overflow-x-auto","sm:rounded-lg"],[1,"bg-slate-200/20","flex","gap-4","items-center","justify-between","border-b-[1px]","px-8","py-5"],[1,"flex","gap-5"],[1,"dashbord-heading-text","text-[22px]"],[1,"fa-solid","fa-building-columns","mr-1"],["class","btn-secondary-light border-[1px] border-secondary-dark/50",3,"click",4,"ngIf"],[1,"flex"],[1,"py-2","h-fit","px-4","rounded-md","bg-gray-400/10","flex","items-center","border-gray-200","border-[1px]"],["placeholder","Search patient...",1,"outline-none","bg-transparent","font-poppins","w-[400px]","text-black/80","placeholder:text-black/50",3,"change"],[1,"bg-transparent"],[1,"fa-solid","fa-magnifying-glass","text-gray-500"],[1,"w-full","flex","h-screen","flex-wrap","justify-evenly","overflow-y-scroll","no-scrollbar","px-5","pb-[50px]"],[1,"px-4","py-3","w-full"],[1,"w-full","text-sm","text-left","rounded-lg","text-gray-500","dark:text-gray-400","border-[1px]"],[1,"text-xs","rounded-lg","text-gray-800","uppercase","bg-black/5","dark:bg-gray-700","dark:text-gray-400"],["scope","col",1,"px-6","py-3"],["class","bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600",4,"ngFor","ngForOf"],[1,"btn-secondary-light","border-[1px]","border-secondary-dark/50",3,"click"],[1,"fa-solid","fa-plus","mr-2"],[1,"bg-white","dark:bg-gray-800","hover:bg-gray-50","dark:hover:bg-gray-600"],[1,"px-6","py-4"],[1,"bg-blue-100","cursor-pointer","text-blue-800","text-xs","font-medium","mr-2","px-2.5","py-1","rounded","dark:bg-blue-900","dark:text-blue-300",3,"click"]],template:function(m,i){1&m&&(e.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"div",3)(4,"div",4)(5,"div",5)(6,"h1",6),e._UZ(7,"i",7),e._uU(8,"My Patients "),e.qZA(),e.YNc(9,A,3,0,"button",8),e.qZA(),e.TgZ(10,"div",9)(11,"div",10)(12,"input",11),e.NdJ("change",function(P){return i.onSearchChange(P)}),e.qZA(),e.TgZ(13,"span",12),e._UZ(14,"i",13),e.qZA()()()(),e.TgZ(15,"div",14)(16,"div",15)(17,"table",16)(18,"thead",17)(19,"tr")(20,"th",18),e._uU(21,"S.L No"),e.qZA(),e.TgZ(22,"th",18),e._uU(23,"Patient's Name"),e.qZA(),e.TgZ(24,"th",18),e._uU(25,"Mobile No."),e.qZA(),e.TgZ(26,"th",18),e._uU(27,"Email"),e.qZA(),e.TgZ(28,"th",18),e._uU(29,"Location"),e.qZA(),e.TgZ(30,"th",18),e._uU(31,"Profile"),e.qZA()()(),e.TgZ(32,"tbody"),e.YNc(33,B,14,5,"tr",19),e.qZA()()()()()()()()),2&m&&(e.xp6(9),e.Q6J("ngIf","agent"===i.userInfo.userType),e.xp6(24),e.Q6J("ngForOf",i.patientList))},dependencies:[s.sg,s.O5]}),p})()},2260:(x,h,l)=>{l.d(h,{c:()=>n});var d=l(6895),r=l(2462),e=l(7132),s=l(2510),f=l(4650);const u=[{path:"",component:r.p}];let n=(()=>{class o{}return o.\u0275fac=function(c){return new(c||o)},o.\u0275mod=f.oAB({type:o}),o.\u0275inj=f.cJS({imports:[d.ez,s.Bz.forChild(u),e.t]}),o})()},1873:(x,h,l)=>{l.d(h,{v:()=>e});class d{constructor(){}static getNamesAndValues(f){return d.getNames(f).map(u=>({name:u,value:f[u]}))}static getNames(f){return Object.keys(f).filter(u=>"number"==typeof f[u]||f[u]===u||f[f[u]]?.toString()!==u)}static getValues(f){return d.getNames(f).map(u=>f[u])}}var r=l(4650);let e=(()=>{class s{static getEnumList(u){let n=[];return d.getNamesAndValues(u).forEach(a=>{let c={id:a.value.toString(),name:a.name};n.push(c)}),n}}return s.\u0275fac=function(u){return new(u||s)},s.\u0275prov=r.Yz7({token:s,factory:s.\u0275fac,providedIn:"root"}),s})()},5649:(x,h,l)=>{l.d(h,{Ap:()=>o,JK:()=>a,cv:()=>_,is:()=>T,ry:()=>b});var d=l(6516),r=l(1873);r.v.getEnumList(d.Is);const s=r.v.getEnumList(d.Y0),f=r.v.getEnumList(d.UE),u=r.v.getEnumList(d.vs),o=(r.v.getEnumList(d.Vn),[{label:"Your Title",inputId:"doctorTitle",defaultOption:"Select Title",options:u,formControlName:"doctorTitle",isSelect:!0,type:"select"},{label:"Full Name",inputId:"fullName",formControlName:"fullName",isSelect:!1,type:"text"},{label:"Email",inputId:"email",formControlName:"email",isSelect:!1,readonly:!0,type:"email"},{label:"Gender",inputId:"gender",formControlName:"gender",options:s,isSelect:!0,type:"select"},{label:"Martial Status",inputId:"maritalStatus",formControlName:"maritalStatus",options:f,isSelect:!0,type:"select"},{label:"Date of Birth",inputId:"dateOfBirth",formControlName:"dateOfBirth",isSelect:!1,type:"date"},{label:"Identity Number",inputId:"identityNumber",formControlName:"identityNumber",isSelect:!1,type:"number"},{label:"BMDC Reg Number",inputId:"bmdcRegNo",formControlName:"bmdcRegNo",isSelect:!1,type:"number"},{label:"BMDC Exp. Date",inputId:"bmdcRegExpiryDate",formControlName:"bmdcRegExpiryDate",isSelect:!1,type:"date"},{label:"Address",inputId:"address",formControlName:"address",isSelect:!1,type:"text"},{label:"Country",inputId:"country",formControlName:"country",isSelect:!1},{label:"City",inputId:"city",formControlName:"city",isSelect:!1,type:"text"},{label:"Zip Code",inputId:"zipCode",formControlName:"zipCode",isSelect:!1,type:"number"},{label:"Specialties",inputId:"specialityId",formControlName:"specialityId",isSelect:!1,type:"select"}]),a=[{label:"Full Name",inputId:"fullName",formControlName:"fullName",isSelect:!1,type:"text"},{label:"Email",inputId:"email",formControlName:"email",isSelect:!1,readonly:!0,type:"email"},{label:"Date of Birth",inputId:"dateOfBirth",formControlName:"dateOfBirth",isSelect:!1,type:"date"},{label:"Address",inputId:"address",formControlName:"address",isSelect:!1,type:"text"},{label:"Country",inputId:"country",formControlName:"country",isSelect:!1},{label:"City",inputId:"city",formControlName:"city",isSelect:!1,type:"text"},{label:"Zip Code",inputId:"zipCode",formControlName:"zipCode",isSelect:!1,type:"number"}],b=[{label:"Agent Name",inputId:"fullName",formControlName:"fullName",isSelect:!1,type:"text"},{label:"Agent Id",inputId:"agentCode",formControlName:"agentCode",isSelect:!1,type:"text"},{label:"Mobile",inputId:"mobileNo",formControlName:"mobileNo",isSelect:!1,type:"tel"},{label:"Agent Organization",inputId:"organizationName",formControlName:"organizationName",isSelect:!1,type:"text"},{label:"Email",inputId:"email",formControlName:"email",isSelect:!1,readonly:!0,type:"email"},{label:"Address",inputId:"address",formControlName:"address",isSelect:!1,type:"text"}],_=[{label:"Patient Name",inputId:"patientName",defaultOption:"Write patient name",formControlName:"patientName",isSelect:!1,type:"text"},{label:"Age",inputId:"age",formControlName:"age",isSelect:!1,type:"text"},{label:"Patient Mobile No",inputId:"patientMobileNo",formControlName:"patientMobileNo",isSelect:!1,type:"tel"},{label:"Gender",inputId:"gender",formControlName:"gender",options:s,isSelect:!0,type:"select"},{label:"Blood Group",inputId:"bloodGroup",formControlName:"bloodGroup",isSelect:!1,type:"text"}],T=g=>["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][new Date(g).getDay()]}}]);