"use strict";(self.webpackChunksoowgood_v2=self.webpackChunksoowgood_v2||[]).push([[8581],{7060:(E,x,s)=>{s.d(x,{G:()=>V});var t=s(4006),v=s(5412),N=s(3900),c=s(4004),m=s(9646),r=s(6516),i=s(1873),o=s(2537),e=s(4650),g=s(427),C=s(2381),h=s(6084),u=s(9805),_=s(629),Z=s(6895),S=s(2510),B=s(8824),A=s(470);function O(p,f){if(1&p){const a=e.EpF();e.TgZ(0,"div")(1,"div",2),e._UZ(2,"img",3),e.qZA(),e.TgZ(3,"div",4)(4,"p"),e._uU(5," You must be "),e.TgZ(6,"a",5),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.dialogRef.close())}),e._uU(7,"Login! "),e.qZA(),e._uU(8," to continue! "),e.qZA(),e.TgZ(9,"p"),e._uU(10,"or"),e.qZA(),e.TgZ(11,"p")(12,"a",6),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.dialogRef.close())}),e._uU(13,"Register"),e.qZA(),e._uU(14," a new account. "),e.qZA()()()}}function w(p,f){1&p&&(e.TgZ(0,"div",7),e._uU(1," You are an authorized "),e.TgZ(2,"strong"),e._uU(3,"Doctor"),e.qZA(),e._uU(4,". If you want to consult a doctor then you have to login as a patient.\n"),e.qZA())}function q(p,f){if(1&p){const a=e.EpF();e.TgZ(0,"li",19),e.NdJ("click",function(){e.CHM(a);const l=e.oxw(2);return e.KtG(l.onStepChange(2,"self"))}),e._UZ(1,"input",68),e.TgZ(2,"label",69)(3,"div",22),e._UZ(4,"i",70),e.TgZ(5,"div")(6,"div",24),e._uU(7),e.qZA(),e.TgZ(8,"div",25),e._uU(9,"If you are patient!"),e.qZA()()(),e.O4$(),e.TgZ(10,"svg",26),e._UZ(11,"path",27),e.qZA()()()}if(2&p){const a=e.oxw(2);e.xp6(7),e.hij(" ",a.stepLoading?"Loading...":"Book for Self","")}}function U(p,f){if(1&p&&(e.TgZ(0,"option",74),e._uU(1),e.qZA()),2&p){const a=f.$implicit;e.Q6J("value",a.id),e.xp6(1),e.Oqu(a.name)}}function M(p,f){if(1&p){const a=e.EpF();e.TgZ(0,"div")(1,"label",71),e._uU(2,"Select your patient"),e.qZA(),e.ynx(3),e.TgZ(4,"select",72),e.NdJ("input",function(l){e.CHM(a);const P=e.oxw(2);return e.KtG(P.getSinglePatientData(l))}),e.TgZ(5,"option",73),e._uU(6,"--Select Patient--"),e.qZA(),e.YNc(7,U,2,2,"option",49),e.qZA(),e.BQk(),e.qZA()}if(2&p){const a=e.oxw(2);e.xp6(7),e.Q6J("ngForOf",a.userPatientList)}}function n(p,f){1&p&&(e.TgZ(0,"p",75),e._uU(1," Please enter patient name. "),e.qZA())}function F(p,f){1&p&&(e.TgZ(0,"p",75),e._uU(1," Patient name should contain only letters and numbers at the end (optional). "),e.qZA())}function R(p,f){1&p&&(e.TgZ(0,"p",75),e._uU(1," Patient name should be at least 3 characters long "),e.qZA())}function G(p,f){1&p&&(e.TgZ(0,"p",75),e._uU(1," Please enter patient age. "),e.qZA())}function K(p,f){1&p&&(e.TgZ(0,"p",75),e._uU(1," Age should be a number. "),e.qZA())}function J(p,f){1&p&&(e.TgZ(0,"p",75),e._uU(1," You must enter a valid mobile number! "),e.qZA())}function W(p,f){1&p&&(e.TgZ(0,"p",75),e._uU(1," Mobile number should have exactly 11 digits and follow the Bangladeshi format! "),e.qZA())}function Y(p,f){if(1&p&&(e.TgZ(0,"option",74),e._uU(1),e.qZA()),2&p){const a=f.$implicit;e.Q6J("value",a.id),e.xp6(1),e.Oqu(a.name)}}function $(p,f){1&p&&(e.TgZ(0,"p",76),e._uU(1," Please select gender! "),e.qZA())}function Q(p,f){1&p&&(e.TgZ(0,"p",76),e._uU(1," Please select blood group! "),e.qZA())}function z(p,f){1&p&&(e.TgZ(0,"div",77)(1,"span"),e._uU(2,"Continue"),e.qZA()())}function j(p,f){1&p&&e._UZ(0,"span",78)}function H(p,f){if(1&p){const a=e.EpF();e.TgZ(0,"div")(1,"div",8)(2,"h1",9),e._UZ(3,"i",10),e._uU(4," Booking "),e.qZA(),e.TgZ(5,"button",11),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.dialogRef.close())}),e._uU(6,"Close"),e.qZA()(),e.TgZ(7,"div",12)(8,"mat-stepper",13,14)(10,"mat-step",15)(11,"form",16)(12,"ul",17),e.YNc(13,q,12,1,"li",18),e.TgZ(14,"li",19),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.onStepChange(1))}),e._UZ(15,"input",20),e.TgZ(16,"label",21)(17,"div",22),e._UZ(18,"i",23),e.TgZ(19,"div")(20,"div",24),e._uU(21," Book for Other"),e.qZA(),e.TgZ(22,"div",25),e._uU(23,"If you are not patient!"),e.qZA()()(),e.O4$(),e.TgZ(24,"svg",26),e._UZ(25,"path",27),e.qZA()()()()()(),e.kcU(),e.TgZ(26,"mat-step",15)(27,"div",28)(28,"div",29)(29,"input",30),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.userExistCheck("exist-user"))}),e.qZA(),e.TgZ(30,"label",31),e._uU(31," Already Exist "),e.qZA()(),e.TgZ(32,"div",29)(33,"input",32),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.userExistCheck("new-user"))}),e.qZA(),e.TgZ(34,"label",33),e._uU(35," New Patient "),e.qZA()()(),e.TgZ(36,"div",34),e.YNc(37,M,8,1,"div",0),e.TgZ(38,"div",34)(39,"form",35)(40,"div",36)(41,"div",37)(42,"div",38)(43,"label",39),e._uU(44," Full Name "),e.qZA(),e._UZ(45,"input",40),e.YNc(46,n,2,0,"p",41),e.YNc(47,F,2,0,"p",41),e.YNc(48,R,2,0,"p",41),e.qZA()(),e.TgZ(49,"div",37)(50,"div",38)(51,"label",42),e._uU(52," Age "),e.qZA(),e._UZ(53,"input",43),e.YNc(54,G,2,0,"p",41),e.YNc(55,K,2,0,"p",41),e.qZA()(),e.TgZ(56,"div",37)(57,"div",38)(58,"label",44),e._uU(59," Patient Mobile No "),e.qZA(),e._UZ(60,"input",45),e.YNc(61,J,2,0,"p",41),e.YNc(62,W,2,0,"p",41),e.qZA()(),e.TgZ(63,"div",37)(64,"div",38)(65,"label",46),e._uU(66," Select gender "),e.qZA(),e.TgZ(67,"select",47)(68,"option",48),e._uU(69,"Select gender "),e.qZA(),e.YNc(70,Y,2,2,"option",49),e.qZA(),e.YNc(71,$,2,0,"p",50),e.qZA()(),e.TgZ(72,"div",37)(73,"div",38)(74,"label",51),e._uU(75," Select blood group "),e.qZA(),e.TgZ(76,"select",52)(77,"option",48),e._uU(78,"Select blood group "),e.qZA(),e.TgZ(79,"option",53),e._uU(80,"A+ "),e.qZA(),e.TgZ(81,"option",54),e._uU(82,"A- "),e.qZA(),e.TgZ(83,"option",55),e._uU(84,"B+ "),e.qZA(),e.TgZ(85,"option",56),e._uU(86,"B- "),e.qZA(),e.TgZ(87,"option",57),e._uU(88,"o+ "),e.qZA(),e.TgZ(89,"option",58),e._uU(90,"o- "),e.qZA(),e.TgZ(91,"option",59),e._uU(92,"Ab+ "),e.qZA(),e.TgZ(93,"option",60),e._uU(94,"Ab- "),e.qZA(),e.TgZ(95,"option",61),e._uU(96,"others "),e.qZA()(),e.YNc(97,Q,2,0,"p",50),e.qZA()()()()()(),e.TgZ(98,"div",62)(99,"button",63),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.onStepChange(0))}),e._uU(100,"Back"),e.qZA(),e.TgZ(101,"button",64),e.NdJ("click",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.createNewPatient())}),e.YNc(102,z,3,0,"div",65),e.YNc(103,j,1,0,"span",66),e.qZA()()(),e.TgZ(104,"mat-step",15)(105,"app-booking-review",67),e.NdJ("gotToBack",function(){e.CHM(a);const l=e.oxw();return e.KtG(l.onStepChange(0))}),e.qZA()()()()()}if(2&p){const a=e.oxw();let d,l,P,T,k,I,y,D,L;e.xp6(8),e.Q6J("selectedIndex",a.activeTab),e.xp6(2),e.Q6J("stepControl",a.firstFormGroup),e.xp6(1),e.Q6J("formGroup",a.bookingForm),e.xp6(2),e.Q6J("ngIf","patient"==a.userRole),e.xp6(13),e.Q6J("stepControl",a.thirdFormGroup),e.xp6(11),e.Q6J("ngIf",a.isExistUser),e.xp6(2),e.Q6J("formGroup",a.createPatientForm),e.xp6(7),e.Q6J("ngIf",a.formSubmitted&&(null==(d=a.createPatientForm.get("patientName"))?null:d.touched)&&(null==(d=a.createPatientForm.get("patientName"))?null:d.hasError("required"))),e.xp6(1),e.Q6J("ngIf",a.formSubmitted&&(null==(l=a.createPatientForm.get("patientName"))?null:l.touched)&&(null==(l=a.createPatientForm.get("patientName"))?null:l.hasError("pattern"))),e.xp6(1),e.Q6J("ngIf",a.formSubmitted&&(null==(P=a.createPatientForm.get("patientName"))?null:P.touched)&&(null==(P=a.createPatientForm.get("patientName"))?null:P.hasError("invalidName"))),e.xp6(6),e.Q6J("ngIf",a.formSubmitted&&(null==(T=a.createPatientForm.get("age"))?null:T.touched)&&(null==(T=a.createPatientForm.get("age"))?null:T.hasError("required"))),e.xp6(1),e.Q6J("ngIf",a.formSubmitted&&(null==(k=a.createPatientForm.get("age"))?null:k.touched)&&(null==(k=a.createPatientForm.get("age"))?null:k.hasError("pattern"))),e.xp6(6),e.Q6J("ngIf",a.formSubmitted&&(null==(I=a.createPatientForm.get("patientMobileNo"))?null:I.touched)&&(null==(I=a.createPatientForm.get("patientMobileNo"))?null:I.hasError("required"))),e.xp6(1),e.Q6J("ngIf",a.formSubmitted&&(null==(y=a.createPatientForm.get("patientMobileNo"))?null:y.touched)&&(null==(y=a.createPatientForm.get("patientMobileNo"))?null:y.hasError("pattern"))),e.xp6(8),e.Q6J("ngForOf",a.genderList),e.xp6(1),e.Q6J("ngIf",a.formSubmitted&&(null==(D=a.createPatientForm.get("gender"))?null:D.touched)&&"0"===(null==(D=a.createPatientForm.get("gender"))?null:D.value)),e.xp6(26),e.Q6J("ngIf",a.formSubmitted&&(null==(L=a.createPatientForm.get("bloodGroup"))?null:L.touched)&&"0"===(null==(L=a.createPatientForm.get("bloodGroup"))?null:L.value)),e.xp6(5),e.Q6J("ngIf",0==a.btnLoader),e.xp6(1),e.Q6J("ngIf",1==a.btnLoader),e.xp6(1),e.Q6J("stepControl",a.fourFormGroup),e.xp6(1),e.Q6J("bookingInfo",a.bookingInfo)}}let V=(()=>{class p{constructor(a,d,l,P,T,k,I,y,D){this.dialogRef=a,this.doctorData=d,this.fb=l,this.UserinfoStateService=P,this.TosterService=T,this.PatientProfileService=k,this.FinancialSetupService=I,this.NormalAuth=y,this.dialog=D,this.activeTab=0,this.formSubmitted=!1,this.createNewPatientInfo={},this.alreadyExistPatient={},this.isNewUser=!1,this.isExistUser=!0,this.btnLoader=!1,this.userPatientList=[],this.genderList=[],this.serviceFeeList=[],this.stepLoading=!1}ngOnInit(){this.genderList=i.v.getEnumList(r.Y0),this.FinancialSetupService.getList().subscribe(d=>{this.serviceFeeList=d}),this.userRole=this.NormalAuth.authInfo()?.userType;let a=this.NormalAuth.authInfo()?.id;"patient"==this.userRole&&a&&(this.UserinfoStateService.getUserPatientInfo(a,"patient"),this.UserinfoStateService.getProfileInfo(a,"patient")),"agent"==this.userRole&&a&&(this.UserinfoStateService.getUserPatientInfo(a,"agent"),this.UserinfoStateService.getProfileInfo(a,"agent")),this.UserinfoStateService.getData().pipe((0,N.w)(d=>(this.profileInfo=d,this.loadForm(),d?this.UserinfoStateService.getUserPatientData().pipe((0,c.U)(l=>l.map(P=>({name:P.patientName,id:P.id})))):(0,m.of)([])))).subscribe(d=>{this.userPatientList=d})}loadForm(){this.bookingForm=this.fb.group({bookMyself:[""],bookOther:[""],patientName:[""],age:[""],mobile:[""]}),this.createPatientForm=this.fb.group({isSelf:[!1,t.kI.required],patientName:["",[t.kI.required,t.kI.minLength(3),o.AG]],patientProfileId:[""],age:["",[t.kI.required,t.kI.pattern(/^[1-9][0-9]{0,2}$/)]],gender:["0",t.kI.required],bloodGroup:["0",t.kI.required],patientMobileNo:["",[t.kI.required,t.kI.pattern(/^(?:88)?[0-9]{11}$/),t.kI.minLength(11),t.kI.maxLength(11)]],patientEmail:[this.profileInfo?.email||"admin@gmail.com",t.kI.required],createdBy:[this.profileInfo.fullName,t.kI.required],creatorEntityId:[this.profileInfo.id,t.kI.required],creatorRole:["patient"==this.userRole?"patient":"agent",t.kI.required]})}onStepChange(a,d){if(0===a&&(this.activeTab=a),2===a){this.stepLoading=!0;let l="",P="",T=0,k=0,I=0,y=0,D=0;"patient"==this.userRole?(l=this.serviceFeeList.find(b=>3==b.platformFacilityId)?.amountIn,T=this.serviceFeeList.find(b=>3==b.platformFacilityId&&b.amountIn==l)?.amount,I=this.serviceFeeList.find(b=>3==b.platformFacilityId)?.providerAmount,"Percentage"==l?y=I*(T/100):"Flat"==l&&(y=T)):"agent"==this.userRole&&(l=this.serviceFeeList.find(b=>6==b.platformFacilityId)?.amountIn,T=this.serviceFeeList.find(b=>6==b.platformFacilityId&&b.amountIn==l)?.amount,P=this.serviceFeeList.find(b=>6==b.platformFacilityId)?.externalAmountIn,k=this.serviceFeeList.find(b=>6==b.platformFacilityId&&b.externalAmountIn==P)?.amount,I=this.serviceFeeList.find(b=>6==b.platformFacilityId)?.providerAmount,"Percentage"==l?y=I*(T/100):"Flat"==l&&(y=T),"Percentage"==P?D=I*(k/100):"Flat"==P&&(D=k)),this.formSubmitted=!0;const L={doctorProfileId:this.doctorData.doctorDetails.id,doctorName:this.doctorData?.doctorDetails.fullName,doctorCode:this.doctorData?.doctorDetails.doctorCode,patientProfileId:this.alreadyExistPatient?.id?this.alreadyExistPatient?.id:this.createNewPatientInfo.id?this.createNewPatientInfo?.id:this.profileInfo?.id,patientName:this.alreadyExistPatient?.patientName?this.alreadyExistPatient?.patientName:this.createNewPatientInfo?.patientName?this.createNewPatientInfo?.patientName:this.profileInfo?.fullName,patientCode:this.alreadyExistPatient?.patientCode?this.alreadyExistPatient?.patientCode:this.createNewPatientInfo?.patientCode?this.createNewPatientInfo?.patientCode:this.profileInfo?.patientCode,patientMobileNo:this.alreadyExistPatient?.patientMobileNo?this.alreadyExistPatient?.patientMobileNo:this.createNewPatientInfo?.patientMobileNo?this.createNewPatientInfo?.patientMobileNo:this.profileInfo?.mobileNo,patientEmail:this.alreadyExistPatient?.patientEmail?this.alreadyExistPatient?.patientEmail:this.createNewPatientInfo?.patientEmail?this.createNewPatientInfo?.patientEmail:this.profileInfo.email||"admin@gmail.com",doctorFee:I,agentFee:D,platformFee:y,totalAppointmentFee:I+D+y,appointmentStatus:1,appointmentPaymentStatus:2,appointmentCreatorId:this.profileInfo?.id,appointmentCreatorRole:"patient"==this.userRole?"patient":"agent"};this.bookingInfo=L,console.log(L),this.profileInfo&&"self"===d?(this.formSubmitted=!0,this.PatientProfileService.update({id:this.profileInfo?.id,patientName:this.profileInfo.fullName,patientCode:this.profileInfo.patientCode,patientEmail:this.profileInfo.email?this.profileInfo.email:"admin@gmail.com",patientMobileNo:this.profileInfo.mobileNo}).subscribe(X=>{this.stepLoading=!1,this.activeTab=a})):this.activeTab=a}1===a&&(this.activeTab=a)}getSinglePatientData(a){a.target.value&&this.UserinfoStateService.getUserPatientData().subscribe(d=>d.find(l=>{l.id==a.target.value&&(this.alreadyExistPatient=l,this.createPatientForm.patchValue({patientProfileId:l.id,age:l.age,gender:l.gender,bloodGroup:l.bloodGroup,patientMobileNo:l.patientMobileNo,patientEmail:l.patientEmail,patientName:l.patientName,createdBy:l.createdBy,creatorEntityId:l.creatorEntityId}))}))}userExistCheck(a){switch(this.createPatientForm.get("patientName")?.reset(),this.createPatientForm.get("age")?.reset(),this.createPatientForm.get("gender")?.reset(),this.createPatientForm.get("bloodGroup")?.reset(),this.createPatientForm.get("patientMobileNo")?.reset(),a){case"new-user":return this.isNewUser=!0,void(this.isExistUser=!1);case"exist-user":return this.isNewUser=!1,void(this.isExistUser=!0)}}createNewPatient(){if(this.formSubmitted=!0,this.createPatientForm.valid)if(this.isNewUser)try{this.btnLoader=!0,this.PatientProfileService.create(this.createPatientForm.value).subscribe(a=>{a.patientCode&&a.patientMobileNo&&this.PatientProfileService.getByPhoneAndCode(a.patientCode,a.patientMobileNo).subscribe(d=>{this.createNewPatientInfo=d,this.TosterService.customToast("Your patient is created!","success"),this.UserinfoStateService.getUserPatientInfo(this.profileInfo.id,"patient"),this.onStepChange(2,"others"),this.btnLoader=!1})})}catch{this.TosterService.customToast("Something wrong! Please retry","error")}else this.onStepChange(2);else this.TosterService.customToast("Please field all the required fields","warning")}}return p.\u0275fac=function(a){return new(a||p)(e.Y36(v.so),e.Y36(v.WI),e.Y36(t.qu),e.Y36(g.Z),e.Y36(C.G),e.Y36(h.j),e.Y36(u.I),e.Y36(_.e),e.Y36(v.uw))},p.\u0275cmp=e.Xpm({type:p,selectors:[["app-live-consult-booking-dialog"]],decls:3,vars:3,consts:[[4,"ngIf"],["class","p-8",4,"ngIf"],[1,"bg-primary","h-[150px]","w-full","flex","flex-col","justify-center","items-center"],["src","assets/SoowGood-Logo.png","alt","logo",1,"max-w-[200px]"],[1,"p-8","flex","justify-center","items-center","flex-col"],["routerLink","/login",1,"text-blue-500","font-bold",3,"click"],["routerLink","/signup",1,"text-blue-500","font-bold",3,"click"],[1,"p-8"],[1,"flex","justify-between","py-4","px-6","border-b-[1px]","items-center"],[1,"dashbord-heading-text"],[1,"mr-1","text-[18px]","fa-solid","fa-calendar"],[1,"btn-secondary-light",3,"click"],[1,"w-full","px-8","pt-5","pb-10"],[1,"mx-auto",3,"selectedIndex"],["stepper",""],[3,"stepControl"],[3,"formGroup"],[1,"grid","grid-row-2","w-full","gap-6"],[3,"click",4,"ngIf"],[3,"click"],["type","radio","formControlName","bookOther","id","bookOther","value","bookOther",1,"hidden","peer"],["for","bookOther",1,"inline-flex","items-center","justify-between","w-full","p-5","text-gray-500","bg-white","border","border-gray-200","rounded-lg","cursor-pointer","peer-checked:border-secondary","peer-checked:text-secondary","hover:text-gray-600","hover:bg-gray-100"],[1,"flex","items-center","gap-3"],[1,"fa-solid","fa-people-robbery","text-[44px]"],[1,"w-full","text-lg","font-semibold"],[1,"w-full"],["aria-hidden","true","xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 14 10",1,"w-5","h-5","ml-3"],["stroke","currentColor","stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M1 5h12m0 0L9 1m4 4L9 9"],[1,"flex","gap-4"],[1,"flex","items-center","px-4","border","border-gray-200","rounded","dark:border-gray-700"],["checked","","id","bordered-radio-2","type","radio","value","","name","bordered-radio",1,"w-4","h-4","text-blue-600","bg-gray-100","border-gray-300","focus:ring-0","dark:bg-gray-700","dark:border-gray-600",3,"click"],["for","bordered-radio-2",1,"w-full","py-2","ml-2","text-sm","font-medium","text-gray-900","dark:text-gray-300"],["id","bordered-radio-1","type","radio","value","","name","bordered-radio",1,"w-4","h-4","text-blue-600","bg-gray-100","border-gray-300","focus:ring-0","dark:bg-gray-700","dark:border-gray-600",3,"click"],["for","bordered-radio-1",1,"w-full","py-2","ml-2","text-sm","font-medium","text-gray-900","dark:text-gray-300"],[1,"pt-5"],[1,"w-full",3,"formGroup"],[1,"-mx-3","flex","flex-wrap"],[1,"w-full","px-3","sm:w-1/2"],[1,"mb-5"],["for","name",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","formControlName","patientName","type","text","name","patientName","id","patientName","placeholder","Full Name",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["class","text-red-600 text-sm",4,"ngIf"],["for","age",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","maxlength","3","minlength","1","formControlName","age","id","age","placeholder","Age",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["for","patientMobileNo",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","maxlength","11","minlength","11","formControlName","patientMobileNo","id","patientMobileNo","placeholder","Patient Mobile No",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["for","date",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["formControlName","gender","name","gender","id","gender",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-2","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["value","0",1,"font-semibold","text-gray-500"],[3,"value",4,"ngFor","ngForOf"],["class","text-[14px] text-red-600",4,"ngIf"],["for","bloodGroup",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["formControlName","bloodGroup","name","bloodGroup","id","bloodGroup",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-2","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["value","A+",1,"font-semibold","text-gray-500"],["value","A-",1,"font-semibold","text-gray-500"],["value","B+",1,"font-semibold","text-gray-500"],["value","B-",1,"font-semibold","text-gray-500"],["value","o+",1,"font-semibold","text-gray-500"],["value","o-",1,"font-semibold","text-gray-500"],["value","Ab+",1,"font-semibold","text-gray-500"],["value","Ab-",1,"font-semibold","text-gray-500"],["value","others",1,"font-semibold","text-gray-500"],[1,"flex","gap-5"],[1,"btn-secondary","py-2","mt-6",3,"click"],[1,"btn-secondary","bg-primary","py-2","mt-6",3,"click"],["class","flex items-center gap-1 text-white group-hover:text-primary",4,"ngIf"],["class","loading loading-dots loading-md",4,"ngIf"],[3,"bookingInfo","gotToBack"],["type","radio","formControlName","bookMyself","id","bookMyself","value","bookMyself","required","",1,"hidden","peer"],["for","bookMyself",1,"inline-flex","items-center","justify-between","w-full","p-5","text-gray-500","bg-white","border","border-gray-200","rounded-lg","cursor-pointer","peer-checked:border-secondary","peer-checked:text-secondary","hover:text-gray-600","hover:bg-gray-100"],[1,"fa-solid","fa-person","text-[44px]"],["for","",1,"label"],[1,"form_input",3,"input"],["value",""],[3,"value"],[1,"text-red-600","text-sm"],[1,"text-[14px]","text-red-600"],[1,"flex","items-center","gap-1","text-white","group-hover:text-primary"],[1,"loading","loading-dots","loading-md"]],template:function(a,d){1&a&&(e.YNc(0,O,15,0,"div",0),e.YNc(1,w,5,0,"div",1),e.YNc(2,H,106,21,"div",0)),2&a&&(e.Q6J("ngIf",!d.doctorData.isAuthUser),e.xp6(1),e.Q6J("ngIf",!d.doctorData.userAccess),e.xp6(1),e.Q6J("ngIf",d.doctorData.isAuthUser&&d.doctorData.userAccess))},dependencies:[Z.sg,Z.O5,S.rH,t._Y,t.YN,t.Kr,t.Fj,t.EJ,t._,t.JJ,t.JL,t.Q7,t.wO,t.nD,t.sg,t.u,B.C0,B.Vq,A.p],styles:[".mat-horizontal-stepper-header-container{display:none!important}  .mat-horizontal-content-container{padding:0!important}input[type=radio][_ngcontent-%COMP%]:checked + .radio-card[_ngcontent-%COMP%]{background:#006c93;color:#fff}"]}),p})()},6516:(E,x,s)=>{s.d(x,{Vn:()=>r,Is:()=>g,vs:()=>h,Y0:()=>S,UE:()=>A,Ix:()=>U});var t=s(7999),v=(()=>{return(n=v||(v={}))[n.Paid=1]="Paid",n[n.Due=2]="Due",n[n.FailedOrCancelled=3]="FailedOrCancelled",v;var n})();(0,t.Uoq)(v);var c=(()=>{return(n=c||(c={}))[n.Pending=1]="Pending",n[n.Confirmed=2]="Confirmed",n[n.InProgress=3]="InProgress",n[n.Completed=4]="Completed",n[n.Cancelled=5]="Cancelled",n[n.Failed=6]="Failed",c;var n})();(0,t.Uoq)(c);var r=(()=>{return(n=r||(r={}))[n.New=1]="New",n[n.Followup=2]="Followup",n[n.ReportShow=3]="ReportShow",n[n.Emargency=4]="Emargency",r;var n})();(0,t.Uoq)(r);var o=(()=>{return(n=o||(o={}))[n.ProfilePicture=1]="ProfilePicture",n[n.DoctorDegreeDoc=2]="DoctorDegreeDoc",n[n.DoctIdentityDoc=3]="DoctIdentityDoc",n[n.DoctorSpecialityDoc=4]="DoctorSpecialityDoc",n[n.Prescription=5]="Prescription",n[n.PatientPreviousDocuments=6]="PatientPreviousDocuments",o;var n})();(0,t.Uoq)(o);var g=(()=>{return(n=g||(g={}))[n.Chamber=1]="Chamber",n[n.Online=2]="Online",n[n.PhysicalVisit=3]="PhysicalVisit",n[n.OnDemand=4]="OnDemand",n[n.OnlineRT=5]="OnlineRT",g;var n})();(0,t.Uoq)(g);var h=(()=>{return(n=h||(h={}))[n.Dr=1]="Dr",n[n.AsstProfDr=2]="AsstProfDr",n[n.AssocProfDr=3]="AssocProfDr",n[n.ProfDr=4]="ProfDr",h;var n})();(0,t.Uoq)(h);var _=(()=>{return(n=_||(_={}))[n.Doctor=1]="Doctor",n[n.Agent=2]="Agent",n[n.Patient=3]="Patient",n[n.Hospital=4]="Hospital",_;var n})();(0,t.Uoq)(_);var S=(()=>{return(n=S||(S={}))[n.Male=1]="Male",n[n.Female=2]="Female",n[n.Others=3]="Others",S;var n})();(0,t.Uoq)(S);var A=(()=>{return(n=A||(A={}))[n.Single=1]="Single",n[n.Maried=2]="Maried",A;var n})();(0,t.Uoq)(A);var w=(()=>{return(n=w||(w={}))[n.New=0]="New",n[n.Send=1]="Send",n[n.Varified=2]="Varified",n[n.Cancel=3]="Cancel",n[n.TimeExpired=4]="TimeExpired",w;var n})();(0,t.Uoq)(w);var U=(()=>{return(n=U||(U={}))[n.Regular=1]="Regular",n[n.Occasional=2]="Occasional",U;var n})();(0,t.Uoq)(U)},9466:(E,x,s)=>{s.d(x,{H:()=>N});var t=s(4650),v=s(7999);let N=(()=>{class c{constructor(r){this.restService=r,this.apiName="Default",this.cancellAppointment=(i,o,e,g)=>this.restService.request({method:"POST",url:`/api/app/appointment/cancell-appointment/${i}`,params:{cancelByid:o,cancelByRole:e}},{apiName:this.apiName,...g}),this.create=(i,o)=>this.restService.request({method:"POST",url:"/api/app/appointment",body:i},{apiName:this.apiName,...o}),this.get=(i,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/${i}`},{apiName:this.apiName,...o}),this.getAppCountByRealTimeConsultancy=(i,o)=>this.restService.request({method:"GET",url:"/api/app/appointment/app-count-by-real-time-consultancy",params:{aptDate:i}},{apiName:this.apiName,...o}),this.getAppCountByScheduleIdSessionId=(i,o,e)=>this.restService.request({method:"GET",url:"/api/app/appointment/app-count-by-schedule-id-session-id",params:{scheduleId:i,sessionId:o}},{apiName:this.apiName,...e}),this.getAppointmentCountForDoctorWithSearchFilter=(i,o,e)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-count-for-doctor-with-search-filter/${i}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline}},{apiName:this.apiName,...e}),this.getAppointmentCountForPatientWithSearchFilter=(i,o,e,g)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-count-for-patient-with-search-filter/${i}`,params:{role:o,name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline}},{apiName:this.apiName,...g}),this.getAppointmentListByDoctorId=(i,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-doctor-id/${i}`},{apiName:this.apiName,...o}),this.getAppointmentListByPatientId=(i,o,e)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-patient-id/${i}`,params:{role:o}},{apiName:this.apiName,...e}),this.getAppointmentListForDoctorWithSearchFilter=(i,o,e,g)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-for-doctor-with-search-filter/${i}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline,offset:e.offset,limit:e.limit,pageNo:e.pageNo,pageSize:e.pageSize,sortBy:e.sortBy,sortOrder:e.sortOrder,isDesc:e.isDesc}},{apiName:this.apiName,...g}),this.getAppointmentListForPatientWithSearchFilter=(i,o,e,g,C)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-for-patient-with-search-filter/${i}`,params:{role:o,name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline,offset:g.offset,limit:g.limit,pageNo:g.pageNo,pageSize:g.pageSize,sortBy:g.sortBy,sortOrder:g.sortOrder,isDesc:g.isDesc}},{apiName:this.apiName,...C}),this.getAppointmentListWithSearchFilter=(i,o,e,g,C,h,u,_,Z)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-with-search-filter/${i}`,params:{name:o,consultancy:e,fromDate:g,toDate:C,aptStatus:h,skipValue:u,currentLimit:_}},{apiName:this.apiName,...Z}),this.getLeftBookingCountBySessionIdAndScheduleId=(i,o,e)=>this.restService.request({method:"GET",url:"/api/app/appointment/left-booking-count",params:{sessionId:i,scheduleId:o}},{apiName:this.apiName,...e}),this.getList=i=>this.restService.request({method:"GET",url:"/api/app/appointment"},{apiName:this.apiName,...i}),this.getListAppointmentListByAdmin=i=>this.restService.request({method:"GET",url:"/api/app/appointment/appointment-list-by-admin"},{apiName:this.apiName,...i}),this.getPatientListByDoctorId=(i,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/patient-list-by-doctor-id/${i}`},{apiName:this.apiName,...o}),this.getSearchedPatientListByDoctorId=(i,o,e)=>this.restService.request({method:"GET",url:`/api/app/appointment/searched-patient-list-by-doctor-id/${i}`,params:{name:o}},{apiName:this.apiName,...e}),this.update=(i,o)=>this.restService.request({method:"PUT",url:"/api/app/appointment",body:i},{apiName:this.apiName,...o}),this.updateAppointmentPaymentStatus=(i,o,e)=>this.restService.request({method:"PUT",url:`/api/app/appointment/appointment-payment-status/${o}`,params:{appCode:i}},{apiName:this.apiName,...e}),this.updateCallConsultationAppointment=(i,o)=>this.restService.request({method:"PUT",url:"/api/app/appointment/call-consultation-appointment",params:{appCode:i}},{apiName:this.apiName,...o}),this.testAcTokenByInput=(i,o)=>this.restService.request({method:"POST",responseType:"text",url:"/api/app/appointment/test-ac-token",body:i},{apiName:this.apiName,...o}),this.testBuildTokenWithUIDByInput=(i,o)=>this.restService.request({method:"POST",responseType:"text",url:"/api/app/appointment/test-build-token-with-uID",body:i},{apiName:this.apiName,...o}),this.testBuildTokenWithUserAccountBy_appIdAnd_appCertificateAnd_channelNameAnd_account=(i,o,e,g,C)=>this.restService.request({method:"POST",responseType:"text",url:`/api/app/appointment/test-build-token-with-user-account/${i}`,params:{_appCertificate:o,_channelName:e,_account:g}},{apiName:this.apiName,...C})}}return c.\u0275fac=function(r){return new(r||c)(t.LFG(v.vgb))},c.\u0275prov=t.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})()},8814:(E,x,s)=>{s.d(x,{z:()=>N});var t=s(4650),v=s(7999);let N=(()=>{class c{constructor(r){this.restService=r,this.apiName="Default",this.create=(i,o)=>this.restService.request({method:"POST",url:"/api/app/doctor-chamber",body:i},{apiName:this.apiName,...o}),this.get=(i,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-chamber/${i}`},{apiName:this.apiName,...o}),this.getDoctorChamberListByDoctorId=(i,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-chamber/doctor-chamber-list-by-doctor-id/${i}`},{apiName:this.apiName,...o}),this.getList=i=>this.restService.request({method:"GET",url:"/api/app/doctor-chamber"},{apiName:this.apiName,...i}),this.update=(i,o)=>this.restService.request({method:"PUT",url:"/api/app/doctor-chamber",body:i},{apiName:this.apiName,...o})}}return c.\u0275fac=function(r){return new(r||c)(t.LFG(v.vgb))},c.\u0275prov=t.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})()},5318:(E,x,s)=>{s.d(x,{P:()=>N});var t=s(4650),v=s(7999);let N=(()=>{class c{constructor(r){this.restService=r,this.apiName="Default",this.create=(i,o)=>this.restService.request({method:"POST",url:"/api/app/doctor-schedule",body:i},{apiName:this.apiName,...o}),this.createFromMobileApp=(i,o)=>this.restService.request({method:"POST",url:"/api/app/doctor-schedule/from-mobile-app",body:i},{apiName:this.apiName,...o}),this.deleteSession=(i,o)=>this.restService.request({method:"DELETE",url:`/api/app/doctor-schedule/${i}/session`},{apiName:this.apiName,...o}),this.get=(i,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/${i}`},{apiName:this.apiName,...o}),this.getDetailsScheduleListByDoctorId=(i,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/details-schedule-list-by-doctor-id/${i}`},{apiName:this.apiName,...o}),this.getList=i=>this.restService.request({method:"GET",url:"/api/app/doctor-schedule"},{apiName:this.apiName,...i}),this.getListByDoctorIdList=(i,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/by-doctor-id-list/${i}`},{apiName:this.apiName,...o}),this.getScheduleListByDoctorId=(i,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/schedule-list-by-doctor-id/${i}`},{apiName:this.apiName,...o}),this.update=(i,o)=>this.restService.request({method:"PUT",url:"/api/app/doctor-schedule",body:i},{apiName:this.apiName,...o}),this.updateFromMobileApp=(i,o)=>this.restService.request({method:"PUT",url:"/api/app/doctor-schedule/from-mobile-app",body:i},{apiName:this.apiName,...o})}}return c.\u0275fac=function(r){return new(r||c)(t.LFG(v.vgb))},c.\u0275prov=t.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})()},9805:(E,x,s)=>{s.d(x,{I:()=>N});var t=s(4650),v=s(7999);let N=(()=>{class c{constructor(r){this.restService=r,this.apiName="Default",this.create=(i,o)=>this.restService.request({method:"POST",url:"/api/app/financial-setup",body:i},{apiName:this.apiName,...o}),this.delete=(i,o)=>this.restService.request({method:"DELETE",url:`/api/app/financial-setup/${i}`},{apiName:this.apiName,...o}),this.get=(i,o)=>this.restService.request({method:"GET",url:`/api/app/financial-setup/${i}`},{apiName:this.apiName,...o}),this.getList=i=>this.restService.request({method:"GET",url:"/api/app/financial-setup"},{apiName:this.apiName,...i}),this.update=(i,o)=>this.restService.request({method:"PUT",url:"/api/app/financial-setup",body:i},{apiName:this.apiName,...o})}}return c.\u0275fac=function(r){return new(r||c)(t.LFG(v.vgb))},c.\u0275prov=t.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})()},470:(E,x,s)=>{s.d(x,{p:()=>e});var t=s(4650),v=s(1873),N=s(6516),c=s(2381),m=s(9466),r=s(8814),i=s(3472),o=s(6895);let e=(()=>{class g{constructor(h,u,_,Z){this.ToasterService=h,this.AppointmentService=u,this.DoctorChamberService=_,this.sslCommerzService=Z,this.gotToBack=new t.vpe,this.sslInputDto={applicantCode:"",examFee:100,serviceCharge:0,customAmount:10,isCustomAmount:!1},this.hasValidCode=!1,this.sslCInputDto={},this.loading=!1,this.appointmentType=v.v.getEnumList(N.Vn)}getTitle(h,u){if("appointmentType"==u)return this.appointmentType.find(_=>_.id==h)}createAppointmentAndPayment(){this.loading=!0,console.log(this.bookingInfo);try{this.AppointmentService.create(this.bookingInfo).subscribe({next:h=>{this.payWithSslCommerz(h.appointmentCode),localStorage.setItem("patientAppointmentCode",JSON.stringify(h.appointmentCode))},error:h=>{console.log(h),this.ToasterService.customToast(String(h.error.error.message),"error"),this.loading=!1}})}catch(h){console.log(h)}}payWithSslCommerz(h){if(this.bookingInfo){const u={};u.applicationCode=h,u.totalAmount=String(this.bookingInfo.totalAppointmentFee),u.transactionId="",this.sslCommerzService.initiateTestPayment(u).subscribe({next:_=>{_&&"SUCCESS"===_.status&&_.gatewayPageURL?(window.location.href=_.gatewayPageURL,this.loading=!1):this.ToasterService.customToast("Unable to initiate your payment request. Please contact our support team.","error")},error:_=>{this.ToasterService.customToast(String(_.error.error.message),"error"),this.loading=!1}})}else this.ToasterService.customToast("Booking info not found","error")}}return g.\u0275fac=function(h){return new(h||g)(t.Y36(c.G),t.Y36(m.H),t.Y36(r.z),t.Y36(i.r))},g.\u0275cmp=t.Xpm({type:g,selectors:[["app-booking-review"]],inputs:{bookingInfo:"bookingInfo"},outputs:{gotToBack:"gotToBack"},decls:60,vars:13,consts:[[1,"w-full","my-5","p-4","bg-white","border","border-gray-200","rounded-lg","shadow","sm:p-6","dark:bg-gray-800","dark:border-gray-700","m-auto"],[1,"text-base","font-semibold","text-gray-900","md:text-xl","dark:text-white"],[1,"text-sm","font-normal","text-gray-500","dark:text-gray-400"],[1,"relative","overflow-x-auto"],[1,"w-full","mt-6","text-sm","text-left","text-gray-500","dark:text-gray-400"],[1,"bg-white","border-b","dark:bg-gray-800","dark:border-gray-700"],["scope","row",1,"py-2","font-medium","text-gray-900","whitespace-nowrap","dark:text-white"],[1,"py-2"],[1,"bg-white","dark:bg-gray-800"],[1,"flex","gap-5"],[1,"btn-secondary","bg-primary","mt-6","text-[15px]","tracking-[1px]","py-1","w-full",3,"click"],[1,"btn-secondary","mt-6","text-[16px]","tracking-[1px]","py-2","w-full",3,"click"]],template:function(h,u){if(1&h&&(t.TgZ(0,"div",0)(1,"h5",1),t._uU(2),t.qZA(),t.TgZ(3,"p",2),t._uU(4,"General Medicine"),t.qZA(),t.TgZ(5,"div")(6,"div",3)(7,"table",4)(8,"tbody")(9,"tr",5)(10,"th",6),t._uU(11," Patient name: "),t.qZA(),t.TgZ(12,"td",7),t._uU(13),t.qZA()(),t.TgZ(14,"tr",5)(15,"th",6),t._uU(16," Appointment Day : "),t.qZA(),t.TgZ(17,"td",7),t._uU(18),t.qZA()(),t.TgZ(19,"tr",5)(20,"th",6),t._uU(21," Appointment Date : "),t.qZA(),t.TgZ(22,"td",7),t._uU(23),t.ALo(24,"date"),t.qZA()(),t.TgZ(25,"tr",5)(26,"th",6),t._uU(27," Appointment Type : "),t.qZA(),t.TgZ(28,"td",7),t._uU(29),t.qZA()(),t.TgZ(30,"tr",5)(31,"th",6),t._uU(32," Hospital name : "),t.qZA(),t.TgZ(33,"td",7),t._uU(34),t.qZA()(),t.TgZ(35,"tr",8)(36,"th",6),t._uU(37," Doctor Fee : "),t.qZA(),t.TgZ(38,"td",7),t._uU(39),t.qZA()(),t.TgZ(40,"tr",8)(41,"th",6),t._uU(42," Booth Fee : "),t.qZA(),t.TgZ(43,"td",7),t._uU(44),t.qZA()(),t.TgZ(45,"tr",8)(46,"th",6),t._uU(47," Platform Fee : "),t.qZA(),t.TgZ(48,"td",7),t._uU(49),t.qZA()(),t.TgZ(50,"tr",8)(51,"th",6),t._uU(52," Total Fee : "),t.qZA(),t.TgZ(53,"td",7),t._uU(54),t.qZA()()()(),t.TgZ(55,"div",9)(56,"button",10),t.NdJ("click",function(){return u.gotToBack.emit(1)}),t._uU(57,"Back"),t.qZA(),t.TgZ(58,"button",11),t.NdJ("click",function(){return u.createAppointmentAndPayment()}),t._uU(59),t.qZA()()()()()),2&h){let _;t.xp6(2),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.doctorName," "),t.xp6(11),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.patientName," "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.scheduleDayofWeek," "),t.xp6(5),t.hij(" ",t.lcZ(24,11,null==u.bookingInfo?null:u.bookingInfo.appointmentDate)," "),t.xp6(6),t.hij(" ",null==(_=u.getTitle(null==u.bookingInfo?null:u.bookingInfo.appointmentType,"appointmentType"))?null:_.name," "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.doctorChamberId," "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.doctorFee," tk. "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.agentFee," tk. "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.platformFee," tk. "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.totalAppointmentFee," tk. "),t.xp6(5),t.Oqu(u.loading?"Loading...":"Confirm & Pay")}},dependencies:[o.uU]}),g})()},1873:(E,x,s)=>{s.d(x,{v:()=>N});class t{constructor(){}static getNamesAndValues(m){return t.getNames(m).map(r=>({name:r,value:m[r]}))}static getNames(m){return Object.keys(m).filter(r=>"number"==typeof m[r]||m[r]===r||m[m[r]]?.toString()!==r)}static getValues(m){return t.getNames(m).map(r=>m[r])}}var v=s(4650);let N=(()=>{class c{static getEnumList(r){let i=[];return t.getNamesAndValues(r).forEach(e=>{let g={id:e.value.toString(),name:e.name};i.push(g)}),i}}return c.\u0275fac=function(r){return new(r||c)},c.\u0275prov=v.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})()},2537:(E,x,s)=>{function N(m){const r=m.value;return r&&(!/^[-\w\s]+$/.test(r)||r.length<3)?{invalidName:!0}:null}s.d(x,{AG:()=>N,dN:()=>c});class c{static isAtLeast6Characters(r){const i=r.value;return i&&i.length<6?{isAtLeast6Characters:!0}:null}static includesSpecialCharacter(r){const i=r.value;return i&&!/.*[!@#$%^&*()_+{}\[\]:;<>,.?~\\\-=/|]/.test(i)?{includesSpecialCharacter:!0}:null}static includesNumber(r){const i=r.value;return i&&!/.*[0-9]/.test(i)?{includesNumber:!0}:null}static matchValidator(r){const i=r.get("password")?.value,o=r.get("confirmPassword")?.value;if(!o?.length)return null;if(o.length<6)r.get("confirmPassword")?.setErrors({minLength:!0});else{if(i===o)return null;r.get("confirmPassword")?.setErrors({mismatch:!0})}}}}}]);