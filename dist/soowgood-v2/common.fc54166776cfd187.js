"use strict";(self.webpackChunksoowgood_v2=self.webpackChunksoowgood_v2||[]).push([[8592],{3661:(f,d,r)=>{r.d(d,{K:()=>_});var s=r(1135),a=r(9646),l=r(8746),i=r(8745);class c{setAuth(u){this.authToken=u.authToken,this.refreshToken=u.refreshToken,this.expiresIn=u.expiresIn}}class e extends c{setUser(u){u&&u.info&&(this.name=u.info.name||"",this.given_name=u.info.given_name||"",this.fullname=u.info.preferred_username||u.info.name,this.email=u.info.email||"",this.email_verified=u.info.email_verified||"False",this.phone_number_verified=u.info.phone_number_verified||"False",this.pic=u.info.pic||"./assets/media/avatars/default.jpg",this.roles=[u.info.role],this.sub=u.info.sub)}}var t=r(4650),n=r(210),g=r(2510);let _=(()=>{class h{get currentUserValue(){return this.currentUserSubject.value}set currentUserValue(p){this.currentUserSubject.next(p)}constructor(p,m){this.oAuthService=p,this.router=m,this.subs=new i.Y,this.isLoadingSubject=new s.X(!1),this.currentUserSubject=new s.X(void 0),this.currentUser$=this.currentUserSubject.asObservable(),this.isLoading$=this.isLoadingSubject.asObservable()}getUserByToken(){return this.oAuthService.hasValidAccessToken()?(0,a.of)(this.createUserModel(this.oAuthService.getIdentityClaims())):(0,a.of)()}login(p,m){try{if(this.oAuthService.hasValidAccessToken()||this.oAuthService.hasValidIdToken())return(0,a.of)(this.createUserModel(this.oAuthService.getIdentityClaims()));this.isLoadingSubject.next(!0),this.oAuthService.oidc=!1,this.oAuthService.fetchTokenUsingPasswordFlowAndLoadUserProfile(p,m).then(v=>(v?this.createUserModel(v):this.logout(),(0,a.of)(v))).catch(v=>{console.log(v),this.isLoadingSubject.next(!1)}),(0,l.x)(()=>this.isLoadingSubject.next(!1))}catch(v){throw v}}createUserModel(p){const m=new e;return m.setUser(p),m.setAuth(this.getAuthData()),this.currentUserSubject=new s.X(m),this.currentUserSubject.next(m),m}getAuthData(){return{authToken:this.oAuthService.getAccessToken(),refreshToken:this.oAuthService.getRefreshToken(),expiresIn:this.oAuthService.getAccessTokenExpiration()}}logout(){this.oAuthService.logOut(),this.router.navigate(["/auth/login"])}ngOnDestroy(){this.subs.unsubscribe()}}return h.\u0275fac=function(p){return new(p||h)(t.LFG(n.Ct),t.LFG(g.F0))},h.\u0275prov=t.Yz7({token:h,factory:h.\u0275fac,providedIn:"root"}),h})()},5654:(f,d,r)=>{r.d(d,{j:()=>l});var s=r(4650),a=r(7999);let l=(()=>{class i{constructor(o){this.restService=o,this.apiName="Default",this.create=(e,t)=>this.restService.request({method:"POST",url:"/api/app/agent-profile",body:e},{apiName:this.apiName,...t}),this.get=(e,t)=>this.restService.request({method:"GET",url:`/api/app/agent-profile/${e}`},{apiName:this.apiName,...t}),this.getByUserId=(e,t)=>this.restService.request({method:"GET",url:`/api/app/agent-profile/by-user-id/${e}`},{apiName:this.apiName,...t}),this.getByUserName=(e,t)=>this.restService.request({method:"GET",url:"/api/app/agent-profile/by-user-name",params:{userName:e}},{apiName:this.apiName,...t}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/agent-profile"},{apiName:this.apiName,...e}),this.getlByUserName=(e,t)=>this.restService.request({method:"GET",url:"/api/app/agent-profile/l-by-user-name",params:{userName:e}},{apiName:this.apiName,...t}),this.update=(e,t)=>this.restService.request({method:"PUT",url:"/api/app/agent-profile",body:e},{apiName:this.apiName,...t})}}return i.\u0275fac=function(o){return new(o||i)(s.LFG(a.vgb))},i.\u0275prov=s.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},1398:(f,d,r)=>{r.d(d,{s:()=>l});var s=r(4650),a=r(7999);let l=(()=>{class i{constructor(o){this.restService=o,this.apiName="Default",this.getDashboadDataForDoctor=(e,t)=>this.restService.request({method:"GET",url:"/api/app/dashboard/dashboad-data-for-doctor",params:{doctorid:e}},{apiName:this.apiName,...t}),this.getDashboadDataForPatient=(e,t,n)=>this.restService.request({method:"GET",url:`/api/app/dashboard/dashboad-data-for-patient/${e}`,params:{role:t}},{apiName:this.apiName,...n}),this.getDashboardAppointmentListForDoctor=(e,t,n)=>this.restService.request({method:"GET",url:`/api/app/dashboard/dashboard-appointment-list-for-doctor/${e}`,params:{day:t}},{apiName:this.apiName,...n}),this.getDashboardAppointmentListForPatient=(e,t,n,g)=>this.restService.request({method:"GET",url:`/api/app/dashboard/dashboard-appointment-list-for-patient/${e}`,params:{role:t,day:n}},{apiName:this.apiName,...g})}}return i.\u0275fac=function(o){return new(o||i)(s.LFG(a.vgb))},i.\u0275prov=s.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},6153:(f,d,r)=>{r.d(d,{R:()=>l});var s=r(4650),a=r(7999);let l=(()=>{class i{constructor(o){this.restService=o,this.apiName="Default",this.create=(e,t)=>this.restService.request({method:"POST",url:"/api/app/degree",body:e},{apiName:this.apiName,...t}),this.get=(e,t)=>this.restService.request({method:"GET",url:`/api/app/degree/${e}`},{apiName:this.apiName,...t}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/degree"},{apiName:this.apiName,...e}),this.update=(e,t)=>this.restService.request({method:"PUT",url:"/api/app/degree",body:e},{apiName:this.apiName,...t})}}return i.\u0275fac=function(o){return new(o||i)(s.LFG(a.vgb))},i.\u0275prov=s.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},2339:(f,d,r)=>{r.d(d,{K:()=>l});var s=r(4650),a=r(7999);let l=(()=>{class i{constructor(o){this.restService=o,this.apiName="Default",this.create=(e,t)=>this.restService.request({method:"POST",url:"/api/app/doctor-profile",body:e},{apiName:this.apiName,...t}),this.get=(e,t)=>this.restService.request({method:"GET",url:`/api/app/doctor-profile/${e}`},{apiName:this.apiName,...t}),this.getAllDoctorsSearchList=(e,t,n,g,_)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctors-search-list",params:{name:e,consultType:t,speciality:n,specialization:g}},{apiName:this.apiName,..._}),this.getByUserId=(e,t)=>this.restService.request({method:"GET",url:`/api/app/doctor-profile/by-user-id/${e}`},{apiName:this.apiName,...t}),this.getByUserName=(e,t)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/by-user-name",params:{userName:e}},{apiName:this.apiName,...t}),this.getCurrentlyOnlineDoctorList=e=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/currently-online-doctor-list"},{apiName:this.apiName,...e}),this.getDoctorDetailsByAdmin=(e,t)=>this.restService.request({method:"GET",url:`/api/app/doctor-profile/${e}/doctor-details-by-admin`},{apiName:this.apiName,...t}),this.getDoctorListFilter=(e,t,n)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-filter",params:{name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline,offset:t.offset,limit:t.limit,pageNo:t.pageNo,pageSize:t.pageSize,sortBy:t.sortBy,sortOrder:t.sortOrder,isDesc:t.isDesc}},{apiName:this.apiName,...n}),this.getDoctorListSearchByName=(e,t,n)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-search-by-name",params:{name:e,offset:t.offset,limit:t.limit,pageNo:t.pageNo,pageSize:t.pageSize,sortBy:t.sortBy,sortOrder:t.sortOrder,isDesc:t.isDesc}},{apiName:this.apiName,...n}),this.getDoctorListWithSearchFilter=(e,t,n,g,_,h,u)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-with-search-filter",params:{name:e,consultancy:t,speciality:n,specialization:g,skipValue:_,currentLimit:h}},{apiName:this.apiName,...u}),this.getDoctorsCountByFilters=(e,t)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctors-count-by-filters",params:{name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline}},{apiName:this.apiName,...t}),this.getDoctorsCountByName=(e,t)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctors-count-by-name",params:{name:e}},{apiName:this.apiName,...t}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/doctor-profile"},{apiName:this.apiName,...e}),this.getListDoctorListByAdmin=e=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-by-admin"},{apiName:this.apiName,...e}),this.update=(e,t)=>this.restService.request({method:"PUT",url:"/api/app/doctor-profile",body:e},{apiName:this.apiName,...t}),this.updateActiveStatusByAdminByIdAndActiveStatus=(e,t,n)=>this.restService.request({method:"PUT",url:`/api/app/doctor-profile/active-status-by-admin/${e}`,params:{activeStatus:t}},{apiName:this.apiName,...n}),this.updateDocotrProfile=(e,t)=>this.restService.request({method:"PUT",url:"/api/app/doctor-profile/docotr-profile",body:e},{apiName:this.apiName,...t}),this.updateDoctorsOnlineStatusByIdAndOnlineStatus=(e,t,n)=>this.restService.request({method:"PUT",url:`/api/app/doctor-profile/doctors-online-status/${e}`,params:{onlineStatus:t}},{apiName:this.apiName,...n}),this.updateProfileStep=(e,t,n)=>this.restService.request({method:"PUT",url:`/api/app/doctor-profile/profile-step/${e}`,params:{step:t}},{apiName:this.apiName,...n})}}return i.\u0275fac=function(o){return new(o||i)(s.LFG(a.vgb))},i.\u0275prov=s.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},6084:(f,d,r)=>{r.d(d,{j:()=>l});var s=r(4650),a=r(7999);let l=(()=>{class i{constructor(o){this.restService=o,this.apiName="Default",this.create=(e,t)=>this.restService.request({method:"POST",url:"/api/app/patient-profile",body:e},{apiName:this.apiName,...t}),this.get=(e,t)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/${e}`},{apiName:this.apiName,...t}),this.getByPhoneAndCode=(e,t,n)=>this.restService.request({method:"GET",url:"/api/app/patient-profile/by-phone-and-code",params:{pCode:e,pPhone:t}},{apiName:this.apiName,...n}),this.getByUserId=(e,t)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/by-user-id/${e}`},{apiName:this.apiName,...t}),this.getByUserName=(e,t)=>this.restService.request({method:"GET",url:"/api/app/patient-profile/by-user-name",params:{userName:e}},{apiName:this.apiName,...t}),this.getDoctorListByCreatorIdFilter=(e,t,n,g)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/doctor-list-by-creator-id-filter/${e}`,params:{name:t.name,consultancyType:t.consultancyType,specialityId:t.specialityId,specializationId:t.specializationId,appointmentStatus:t.appointmentStatus,fromDate:t.fromDate,toDate:t.toDate,isCurrentOnline:t.isCurrentOnline,offset:n.offset,limit:n.limit,pageNo:n.pageNo,pageSize:n.pageSize,sortBy:n.sortBy,sortOrder:n.sortOrder,isDesc:n.isDesc}},{apiName:this.apiName,...g}),this.getDoctorListFilter=(e,t,n)=>this.restService.request({method:"GET",url:"/api/app/patient-profile/doctor-list-filter",params:{name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline,offset:t.offset,limit:t.limit,pageNo:t.pageNo,pageSize:t.pageSize,sortBy:t.sortBy,sortOrder:t.sortOrder,isDesc:t.isDesc}},{apiName:this.apiName,...n}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/patient-profile"},{apiName:this.apiName,...e}),this.getListPatientListByAdmin=e=>this.restService.request({method:"GET",url:"/api/app/patient-profile/patient-list-by-admin"},{apiName:this.apiName,...e}),this.getPatientListBySearchUserProfileId=(e,t,n,g)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/patient-list-by-search-user-profile-id/${e}`,params:{role:t,name:n}},{apiName:this.apiName,...g}),this.getPatientListByUserProfileId=(e,t,n)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/patient-list-by-user-profile-id/${e}`,params:{role:t}},{apiName:this.apiName,...n}),this.update=(e,t)=>this.restService.request({method:"PUT",url:"/api/app/patient-profile",body:e},{apiName:this.apiName,...t})}}return i.\u0275fac=function(o){return new(o||i)(s.LFG(a.vgb))},i.\u0275prov=s.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},5374:(f,d,r)=>{r.d(d,{V:()=>l});var s=r(4650),a=r(7999);let l=(()=>{class i{constructor(o){this.restService=o,this.apiName="Default",this.isUserExistsByUserName=(e,t)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/is-user-exists",params:{userName:e}},{apiName:this.apiName,...t}),this.loginByUserDto=(e,t)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/login",body:e},{apiName:this.apiName,...t}),this.refreshAccessTokenByUser=(e,t)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/refresh-access-token",body:e},{apiName:this.apiName,...t}),this.resetPasswordByInputDto=(e,t)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/reset-password",body:e},{apiName:this.apiName,...t}),this.resetPassword_AppByInputDto=(e,t)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/reset-password_App",body:e},{apiName:this.apiName,...t}),this.signupUserByUserDtoAndPasswordAndRole=(e,t,n,g)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/signup-user",params:{password:t,role:n},body:e},{apiName:this.apiName,...g})}}return i.\u0275fac=function(o){return new(o||i)(s.LFG(a.vgb))},i.\u0275prov=s.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},1941:(f,d,r)=>{r.d(d,{g:()=>l});var s=r(4650),a=r(6895);let l=(()=>{class i{}return i.\u0275fac=function(o){return new(o||i)},i.\u0275cmp=s.Xpm({type:i,selectors:[["app-dashboard-statisticscard"]],inputs:{details:"details"},decls:10,vars:5,consts:[[1,"flex","gap-4","cursor-pointer","group","justify-between","bg-white","px-5","py-3","items-center","rounded-lg","border-[1px]","max-w-full","shadow-2xl","shadow-blue-400/20"],[1,""],[1,"font-medium","transition-all","duration-100"],[1,"dashbord-heading-text","text-[24px]"],[1,"text-[14px]","font-normal","text-green-700"],[1,"group-hover:scale-105","transition-all","duration-100","w-[50px]","h-[50px]","shadow-xl","text-center","border-radius-md","bg-gradient-to-r","flex","items-center","justify-center","from-cyan-500","to-blue-500","rounded-lg"],[1,"fa-solid","fa-bed-pulse","box-shado","text-blue-50","text-[24px]"]],template:function(o,e){1&o&&(s.TgZ(0,"div",0)(1,"div",1)(2,"h3",2),s._uU(3),s.qZA(),s.TgZ(4,"h1",3),s._uU(5),s.ALo(6,"currency"),s._UZ(7,"span",4),s.qZA()(),s.TgZ(8,"div",5),s._UZ(9,"i",6),s.qZA()()),2&o&&(s.xp6(3),s.Oqu(e.details.title),s.xp6(2),s.Oqu(e.details.currency?s.xi3(6,2,e.details.data,"BDT "):e.details.data))},dependencies:[a.H9]}),i})()},2356:(f,d,r)=>{r.d(d,{B:()=>l});var s=r(6895),a=r(4650);let l=(()=>{class i{}return i.\u0275fac=function(o){return new(o||i)},i.\u0275mod=a.oAB({type:i}),i.\u0275inj=a.cJS({imports:[s.ez]}),i})()},8047:(f,d,r)=>{r.d(d,{q:()=>_});var s=r(9229),a=r(4650),l=r(629),i=r(5412),c=r(5817),o=r(2381),e=r(6895);function t(h,u){if(1&h){const p=a.EpF();a.TgZ(0,"tr",12)(1,"td",10),a._uU(2),a.qZA(),a.TgZ(3,"td",10),a._uU(4),a.ALo(5,"date"),a.qZA(),a.TgZ(6,"td",10),a._uU(7),a.ALo(8,"date"),a.qZA(),a.TgZ(9,"td",10)(10,"span",13),a.NdJ("click",function(){const S=a.CHM(p).$implicit,y=a.oxw(2);return a.KtG(y.openPdfDialog(S.id))}),a._uU(11,"View"),a.qZA()(),a.TgZ(12,"td",10),a._uU(13),a.ALo(14,"date"),a.qZA(),a.TgZ(15,"td",10),a._uU(16),a.qZA()()}if(2&h){const p=u.$implicit;a.xp6(2),a.hij(" Dr. ",p.doctorName," "),a.xp6(2),a.hij(" ",a.lcZ(5,5,p.prescriptionDate)," "),a.xp6(3),a.hij(" ",a.lcZ(8,7,p.appointmentDate)," "),a.xp6(6),a.hij(" ",a.lcZ(14,9,p.followupDate)," "),a.xp6(3),a.hij(" ",p.advice," ")}}function n(h,u){if(1&h&&(a.TgZ(0,"div",6)(1,"table",7)(2,"thead",8)(3,"tr")(4,"th",9),a._uU(5," Doctor's Name "),a.qZA(),a.TgZ(6,"th",9),a._uU(7," Prescription Date "),a.qZA(),a.TgZ(8,"td",10),a._uU(9," Appointment Date "),a.qZA(),a.TgZ(10,"th",9),a._uU(11," Prescription "),a.qZA(),a.TgZ(12,"td",10),a._uU(13," Followup Date "),a.qZA(),a.TgZ(14,"th",9),a._uU(15," Advice "),a.qZA()()(),a.TgZ(16,"tbody"),a.YNc(17,t,17,11,"tr",11),a.qZA()()()),2&h){const p=a.oxw();a.xp6(17),a.Q6J("ngForOf",p.prescriptionListDetails)}}function g(h,u){if(1&h&&(a.TgZ(0,"div",14),a._uU(1),a.qZA()),2&h){const p=a.oxw();a.xp6(1),a.hij(" ",p.isLoading.message," ")}}let _=(()=>{class h{constructor(p,m,v,S){this.NormalAuth=p,this.dialog=m,this.PrescriptionMasterService=v,this.TosterService=S,this.isLoading={status:!1,message:""}}ngOnInit(){this.isLoading={status:!0,message:"Data is loading..."};let p=this.NormalAuth.authInfo();try{this.PrescriptionMasterService.getPrescriptionMasterListByPatientId(p.id).subscribe({next:m=>{this.prescriptionListDetails=m,this.isLoading={status:!1,message:""}},error:m=>{this.TosterService.customToast("Someting went wrong while getting data!","error"),this.isLoading={status:!1,message:""}}})}catch{this.isLoading={status:!1,message:""}}}openPdfDialog(p){this.dialog.open(s.P,{minWidth:"820px",maxWidth:"100%",height:"1000px",data:{prescriptionId:p}})}}return h.\u0275fac=function(p){return new(p||h)(a.Y36(l.e),a.Y36(i.uw),a.Y36(c.c),a.Y36(o.G))},h.\u0275cmp=a.Xpm({type:h,selectors:[["app-prescriptions"]],decls:6,vars:2,consts:[[1,"overflow-hidden","doctor-dashboard_midcontent_container","w-ful"],[1,"flex","items-center","justify-left"],[1,"w-full","h-screen","bg-white"],[1,"relative","overflow-x-auto","sm:rounded-lg","px-8","py-6"],["class","px-4",4,"ngIf"],["class","flex w-full h-[300px] justify-center items-center",4,"ngIf"],[1,"px-4"],[1,"w-full","text-sm","text-left","rounded-lg","text-gray-500","dark:text-gray-400","border-[1px]"],[1,"text-xs","rounded-lg","text-gray-800","uppercase","bg-black/5","dark:bg-gray-700","dark:text-gray-400"],["scope","col",1,"px-6","py-3"],[1,"px-6","py-4"],["class","bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600",4,"ngFor","ngForOf"],[1,"bg-white","dark:bg-gray-800","hover:bg-gray-50","dark:hover:bg-gray-600"],[1,"py-1","px-4","border-secondary-dark/10","border-[1px]","bg-secondary-light","text-primary","rounded-md","cursor-pointer",3,"click"],[1,"flex","w-full","h-[300px]","justify-center","items-center"]],template:function(p,m){1&p&&(a.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"div",3),a.YNc(4,n,18,1,"div",4),a.YNc(5,g,2,1,"div",5),a.qZA()()()()),2&p&&(a.xp6(4),a.Q6J("ngIf",!m.isLoading.status),a.xp6(1),a.Q6J("ngIf",m.isLoading.status))},dependencies:[e.sg,e.O5,e.uU]}),h})()},1936:(f,d,r)=>{r.d(d,{f:()=>i});var s=r(1135),a=r(4650),l=r(2339);let i=(()=>{class c{constructor(e){this.DoctorProfileService=e,this.doctorsList=new s.X([]),this.currentlyOnlineDoctor=new s.X([])}getDoctorListData(){return this.doctorsList.asObservable()}getCurrentlyOnlineDoctorData(){return this.currentlyOnlineDoctor.asObservable()}sendDoctorListData(e){this.doctorsList.next(e)}sendCurrentlyOnlineDoctorData(e){this.currentlyOnlineDoctor.next(e)}getAllDoctorList(){return this.DoctorProfileService.getList().subscribe(e=>{this.sendDoctorListData(e)}),this.getDoctorListData()}getCurrentlyOnlineDoctorList(){return this.DoctorProfileService.getCurrentlyOnlineDoctorList().subscribe(e=>{this.sendCurrentlyOnlineDoctorData(e)}),this.getCurrentlyOnlineDoctorData()}}return c.\u0275fac=function(e){return new(e||c)(a.LFG(l.K))},c.\u0275prov=a.Yz7({token:c,factory:c.\u0275fac,providedIn:"root"}),c})()},2381:(f,d,r)=>{r.d(d,{G:()=>l});var s=r(4650),a=r(9094);let l=(()=>{class i{constructor(o){this.toasterService=o}customToast(o,e){return this.toasterService[e](o,this.getToastOptions(e))}getToastOptions(o){const e=this.getBackgroundColor(o);return{duration:3e3,style:{padding:"10px 16px",color:this.getTextColor(o),background:e},iconTheme:this.getIconColor(o)}}getBackgroundColor(o){switch(o){case"success":return"rgb(0 171 7 / 100%)";case"error":return"rgb(255 0 0 / 100%) ";case"warning":return"rgb(255 179 68 / 100%)";default:return"#c2e0c6"}}getTextColor(o){switch(o){case"success":case"error":return"#f1f1f1";case"warning":return"#7a5600";default:return"#333"}}getIconColor(o){switch(o){case"success":default:return{primary:"#005539",secondary:"#f1f1f1"};case"error":return{primary:"#f44336",secondary:"#f1f1f1"};case"warning":return{primary:"#483500",secondary:"#f1f1f1"}}}}return i.\u0275fac=function(o){return new(o||i)(s.LFG(a.jE))},i.\u0275prov=s.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},534:(f,d,r)=>{r.d(d,{h:()=>s});const s=["Afghanistan","Albania","Algeria","Andorra","Angola","Antigua and Barbuda","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina Faso","Burundi","Cabo Verde","Cambodia","Cameroon","Canada","Central African Republic","Chad","Chile","China","Colombia","Comoros","Congo (Congo-Brazzaville)","Costa Rica","Croatia","Cuba","Cyprus","Czechia (Czech Republic)","Democratic Republic of the Congo (Congo-Kinshasa)","Denmark","Djibouti","Dominica","Dominican Republic","East Timor (Timor-Leste)","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Holy See","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar (formerly Burma)","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","North Korea","North Macedonia (formerly Macedonia)","Norway","Oman","Pakistan","Palau","Palestine State","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Saint Kitts and Nevis","Saint Lucia","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Korea","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"]}}]);