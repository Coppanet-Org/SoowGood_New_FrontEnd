"use strict";(self.webpackChunksoowgood_v2=self.webpackChunksoowgood_v2||[]).push([[640],{9466:(E,C,r)=>{r.d(C,{H:()=>v});var m=r(4650),_=r(7999);let v=(()=>{class b{constructor(y){this.restService=y,this.apiName="Default",this.create=(l,s)=>this.restService.request({method:"POST",url:"/api/app/appointment",body:l},{apiName:this.apiName,...s}),this.get=(l,s)=>this.restService.request({method:"GET",url:`/api/app/appointment/${l}`},{apiName:this.apiName,...s}),this.getAppCountByScheduleIdSessionId=(l,s,P)=>this.restService.request({method:"GET",url:"/api/app/appointment/app-count-by-schedule-id-session-id",params:{scheduleId:l,sessionId:s}},{apiName:this.apiName,...P}),this.getAppointmentListByDoctorId=(l,s)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-doctor-id/${l}`},{apiName:this.apiName,...s}),this.getAppointmentListByPatientId=(l,s)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-patient-id/${l}`},{apiName:this.apiName,...s}),this.getLeftBookingCountBySessionIdAndScheduleId=(l,s,P)=>this.restService.request({method:"GET",url:"/api/app/appointment/left-booking-count",params:{sessionId:l,scheduleId:s}},{apiName:this.apiName,...P}),this.getList=l=>this.restService.request({method:"GET",url:"/api/app/appointment"},{apiName:this.apiName,...l}),this.getPatientListByDoctorId=(l,s)=>this.restService.request({method:"GET",url:`/api/app/appointment/patient-list-by-doctor-id/${l}`},{apiName:this.apiName,...s}),this.update=(l,s)=>this.restService.request({method:"PUT",url:"/api/app/appointment",body:l},{apiName:this.apiName,...s})}}return b.\u0275fac=function(y){return new(y||b)(m.LFG(_.vgb))},b.\u0275prov=m.Yz7({token:b,factory:b.\u0275fac,providedIn:"root"}),b})()},5318:(E,C,r)=>{r.d(C,{P:()=>v});var m=r(4650),_=r(7999);let v=(()=>{class b{constructor(y){this.restService=y,this.apiName="Default",this.create=(l,s)=>this.restService.request({method:"POST",url:"/api/app/doctor-schedule",body:l},{apiName:this.apiName,...s}),this.deleteSession=(l,s)=>this.restService.request({method:"DELETE",url:`/api/app/doctor-schedule/${l}/session`},{apiName:this.apiName,...s}),this.get=(l,s)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/${l}`},{apiName:this.apiName,...s}),this.getDetailsScheduleListByDoctorId=(l,s)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/details-schedule-list-by-doctor-id/${l}`},{apiName:this.apiName,...s}),this.getList=l=>this.restService.request({method:"GET",url:"/api/app/doctor-schedule"},{apiName:this.apiName,...l}),this.getListByDoctorIdList=(l,s)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/by-doctor-id-list/${l}`},{apiName:this.apiName,...s}),this.getScheduleListByDoctorId=(l,s)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/schedule-list-by-doctor-id/${l}`},{apiName:this.apiName,...s}),this.update=(l,s)=>this.restService.request({method:"PUT",url:"/api/app/doctor-schedule",body:l},{apiName:this.apiName,...s})}}return b.\u0275fac=function(y){return new(y||b)(m.LFG(_.vgb))},b.\u0275prov=m.Yz7({token:b,factory:b.\u0275fac,providedIn:"root"}),b})()},494:(E,C,r)=>{r.d(C,{R:()=>gt});var m=r(4006),_=r(5649),v=r(3900),b=r(4004),D=r(9646),y=r(8675),l=r(9841),s=r(4482),P=r(5797),V=r(3268),W=r(9635),K=r(3269);function U(...n){const d=(0,K.jO)(n);return d?(0,W.z)(U(...n),(0,V.Z)(d)):(0,s.e)((e,o)=>{(0,l.l)([e,...(0,P.k)(n)])(o)})}function z(...n){return U(...n)}var j=r(5412),L=r(4473),X=r(6240),t=r(4650),q=r(427),tt=r(6084),et=r(7087),Y=r(2381),ot=r(5318),Z=r(1135);let R=(()=>{class n{constructor(){this.doctorSlotList=new Z.X([]),this.doctorScheduleList=new Z.X([]),this.selectedSlot=new Z.X({})}sendDoctorAvailableSlotData(e){this.doctorSlotList.next(e)}getDoctorAvailableSlotData(){return this.doctorSlotList.asObservable()}sendDoctorScheduleData(e){this.doctorScheduleList.next(e)}getDoctorScheduleData(){return this.doctorScheduleList.asObservable()}sendSelectedSlot(e){this.selectedSlot.next(e)}getSelectedSlot(){return this.selectedSlot.asObservable()}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=t.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();var G=r(9466),nt=r(629);let J=(()=>{class n{constructor(){this.bookingInfo=new Z.X({})}sendBookingData(e){this.bookingInfo.next(e),localStorage.removeItem("booking-info"),localStorage.setItem("booking-info",JSON.stringify(e))}getBookingData(){const e=localStorage.getItem("booking-info");return e&&this.bookingInfo.next(JSON.parse(e)),this.bookingInfo.asObservable()}}return n.\u0275fac=function(e){return new(e||n)},n.\u0275prov=t.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),n})();var O=r(6895),Q=r(8824),it=r(9300);let at=(()=>{class n{constructor(e){this.DoctorScheduleStateService=e}selectSlot(e){this.DoctorScheduleStateService.sendSelectedSlot(e)}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(R))},n.\u0275cmp=t.Xpm({type:n,selectors:[["app-slot-item"]],inputs:{item:"item"},decls:8,vars:6,consts:[[1,"flex","items-center","mr-3"],["hidden","","type","radio","name","default-radio",1,"w-4","h-4","text-blue-600","bg-gray-100","border-gray-300","focus:ring-blue-500","focus:ring-2",3,"id","value"],[1,"radio-card","flex","py-2","px-5","border-[1px]","border-secondary-dark/20","bg-secondary-light","text-secondary-dark","cursor-pointer",3,"for","click"],[1,"card-content-wrapper"],[1,"check-icon"],[1,"card-content","tooltip"]],template:function(e,o){1&e&&(t.TgZ(0,"div",0),t._UZ(1,"input",1),t.TgZ(2,"label",2),t.NdJ("click",function(){return o.selectSlot(o.item)}),t.TgZ(3,"div",3),t._UZ(4,"span",4),t.TgZ(5,"div",5)(6,"h4"),t._uU(7),t.qZA()()()()()),2&e&&(t.xp6(1),t.Q6J("id",o.item.id)("value",o.item.id),t.xp6(1),t.Q6J("for",o.item.id),t.xp6(3),t.uIk("data-tip","Available :- "+o.item.leftPatient),t.xp6(2),t.AsE("",o.item.startTime," - ",o.item.endTime,""))},styles:["input[type=radio][_ngcontent-%COMP%]:checked + .radio-card[_ngcontent-%COMP%]{background:#006c93;color:#fff}"]}),n})();function rt(n,d){if(1&n&&(t.TgZ(0,"div"),t._UZ(1,"app-slot-item",2),t.qZA()),2&n){const e=d.$implicit;t.xp6(1),t.Q6J("item",e)}}let H=(()=>{class n{constructor(e){this.DoctorScheduleStateService=e,this.slotList=[],this.DoctorScheduleStateService.getDoctorAvailableSlotData().pipe((0,it.h)(o=>o)).subscribe(o=>{this.slotList=o})}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(R))},n.\u0275cmp=t.Xpm({type:n,selectors:[["app-slots"]],decls:2,vars:1,consts:[[1,"flex"],[4,"ngFor","ngForOf"],[3,"item"]],template:function(e,o){1&e&&(t.TgZ(0,"div",0),t.YNc(1,rt,2,1,"div",1),t.qZA()),2&e&&(t.xp6(1),t.Q6J("ngForOf",o.slotList))},dependencies:[O.sg,at]}),n})();var f=r(7999);let c=(()=>{class n{constructor(e){this.restService=e,this.apiName="Default",this.initiatePayment=(o,i)=>this.restService.request({method:"POST",url:"/api/app/ssl-commerz/initiate-payment",body:o},{apiName:this.apiName,...i}),this.initiateRefund=o=>this.restService.request({method:"POST",url:"/api/app/ssl-commerz/initiate-refund"},{apiName:this.apiName,...o}),this.initiateTestPayment=(o,i)=>this.restService.request({method:"POST",url:"/api/app/ssl-commerz/initiate-test-payment",body:o},{apiName:this.apiName,...i}),this.initiateTestRefund=o=>this.restService.request({method:"POST",url:"/api/app/ssl-commerz/initiate-test-refund"},{apiName:this.apiName,...o}),this.updateApplicantPaymentStatusBySslCommerzResponseDic=(o,i)=>this.restService.request({method:"PUT",url:"/api/app/ssl-commerz/applicant-payment-status",body:o},{apiName:this.apiName,...i}),this.updatePaymentHistoryBySslCommerzResponseDic=(o,i)=>this.restService.request({method:"PUT",url:"/api/app/ssl-commerz/payment-history",body:o},{apiName:this.apiName,...i}),this.validateTestTransaction=(o,i)=>this.restService.request({method:"POST",url:"/api/app/ssl-commerz/validate-test-transaction",body:o},{apiName:this.apiName,...i}),this.validateTransaction=(o,i)=>this.restService.request({method:"POST",url:"/api/app/ssl-commerz/validate-transaction",body:o},{apiName:this.apiName,...i})}}return n.\u0275fac=function(e){return new(e||n)(t.LFG(f.vgb))},n.\u0275prov=t.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),n})(),a=(()=>{class n{constructor(e,o,i,S){this.DoctorBookingStateService=e,this.ToasterService=o,this.appointmentService=i,this.sslCommerzService=S,this.sslInputDto={applicantCode:"",examFee:100,serviceCharge:0,customAmount:10,isCustomAmount:!1},this.hasValidCode=!1,this.sslCInputDto={}}ngOnInit(){this.DoctorBookingStateService.getBookingData().subscribe(e=>{this.bookingInfo=e})}payWithSslCommerz(){const e={};e.applicationCode=this.bookingInfo.appointmentCode,e.totalAmount=String(this.bookingInfo.totalAppointmentFee),e.transactionId="",this.sslCommerzService.initiateTestPayment(e).subscribe(o=>{o&&"SUCCESS"===o.status?(window.location=o.gatewayPageURL,localStorage.removeItem("booking-info"),this.ToasterService.customToast("Payemnt success","success")):this.ToasterService.customToast("Unable to initiate your payment request. Please contact our support team.","error")})}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(J),t.Y36(Y.G),t.Y36(G.H),t.Y36(c))},n.\u0275cmp=t.Xpm({type:n,selectors:[["app-booking-review"]],decls:41,vars:3,consts:[[1,"w-full","my-5","p-4","bg-white","border","border-gray-200","rounded-lg","shadow","sm:p-6","dark:bg-gray-800","dark:border-gray-700","m-auto"],[1,"text-base","font-semibold","text-gray-900","md:text-xl","dark:text-white"],[1,"text-sm","font-normal","text-gray-500","dark:text-gray-400"],[1,"relative","overflow-x-auto"],[1,"w-full","mt-6","text-sm","text-left","text-gray-500","dark:text-gray-400"],[1,"bg-white","border-b","dark:bg-gray-800","dark:border-gray-700"],["scope","row",1,"py-2","font-medium","text-gray-900","whitespace-nowrap","dark:text-white"],[1,"py-2"],[1,"bg-white","dark:bg-gray-800"],[1,"btn-secondary","mt-6","text-[16px]","tracking-[1px]","py-2","w-full",3,"click"]],template:function(e,o){1&e&&(t.TgZ(0,"div",0)(1,"h5",1),t._uU(2," Dr. Azizur Rahman "),t.qZA(),t.TgZ(3,"p",2),t._uU(4,"General Medicine"),t.qZA(),t.TgZ(5,"div")(6,"div",3)(7,"table",4)(8,"tbody")(9,"tr",5)(10,"th",6),t._uU(11," Patient name: "),t.qZA(),t.TgZ(12,"td",7),t._uU(13),t.qZA()(),t.TgZ(14,"tr",5)(15,"th",6),t._uU(16," Appointment Day : "),t.qZA(),t.TgZ(17,"td",7),t._uU(18),t.qZA()(),t.TgZ(19,"tr",5)(20,"th",6),t._uU(21," Appointment Date : "),t.qZA(),t.TgZ(22,"td",7),t._uU(23," 02/25/2023 "),t.qZA()(),t.TgZ(24,"tr",5)(25,"th",6),t._uU(26," Consultancy type : "),t.qZA(),t.TgZ(27,"td",7),t._uU(28," Hospital visit "),t.qZA()(),t.TgZ(29,"tr",5)(30,"th",6),t._uU(31," Hospital name : "),t.qZA(),t.TgZ(32,"td",7),t._uU(33," Dhaka medical college, Dhaka "),t.qZA()(),t.TgZ(34,"tr",8)(35,"th",6),t._uU(36," Doctor Fee : "),t.qZA(),t.TgZ(37,"td",7),t._uU(38),t.qZA()()()(),t.TgZ(39,"button",9),t.NdJ("click",function(){return o.payWithSslCommerz()}),t._uU(40,"Confirm"),t.qZA()()()()),2&e&&(t.xp6(13),t.hij(" ",null==o.bookingInfo?null:o.bookingInfo.patientName," "),t.xp6(5),t.hij(" ",null==o.bookingInfo?null:o.bookingInfo.scheduleDayofWeek," "),t.xp6(20),t.hij(" ",null==o.bookingInfo?null:o.bookingInfo.totalAppointmentFee," tk. "))}}),n})(),p=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275cmp=t.Xpm({type:n,selectors:[["app-booking-payment"]],decls:2,vars:0,template:function(e,o){1&e&&(t.TgZ(0,"p"),t._uU(1,"booking-payment works!"),t.qZA())}}),n})();const M=["buttonMyself"],A=["buttonOthers"];function F(n,d){if(1&n&&(t.ynx(0,16),t._UZ(1,"app-input",54),t.BQk()),2&n){const e=d.$implicit,o=t.oxw(2);t.xp6(1),t.Q6J("label",e.label)("inputId",e.inputId)("isSelectInput",e.isSelect)("readonly",!!e.readonly&&e.readonly)("options",e.options)("formControlName",e.formControlName)("formGroup",o.form)("type",e.type)}}function ct(n,d){1&n&&(t.TgZ(0,"div",55)(1,"label",56),t._uU(2," Available "),t.qZA(),t.TgZ(3,"div",57),t._UZ(4,"app-slots"),t.qZA()())}function dt(n,d){if(1&n){const e=t.EpF();t.TgZ(0,"div")(1,"form",8)(2,"div",41)(3,"div",25)(4,"div",42),t._UZ(5,"img",43),t.qZA(),t.TgZ(6,"div")(7,"h2",44),t._uU(8),t.qZA(),t.TgZ(9,"p"),t._uU(10,"General Medicine"),t.qZA()()(),t.TgZ(11,"div",45)(12,"div",46)(13,"div",47),t._uU(14,"Total Fee"),t.qZA(),t.TgZ(15,"div",48),t._uU(16),t.qZA()()()(),t._UZ(17,"hr",49),t.TgZ(18,"div",34),t.YNc(19,F,2,8,"ng-container",35),t.qZA()(),t.YNc(20,ct,5,0,"div",50),t.TgZ(21,"div",51)(22,"button",52),t.NdJ("click",function(){t.CHM(e);const i=t.oxw();return t.KtG(i.onStepChange(0))}),t._uU(23,"Back"),t.qZA(),t.TgZ(24,"button",53),t.NdJ("click",function(){t.CHM(e);const i=t.oxw();return t.KtG(i.onStepChange(3))}),t._uU(25,"Next"),t.qZA()()()}if(2&n){const e=t.oxw();t.xp6(1),t.Q6J("formGroup",e.form),t.xp6(7),t.Oqu(null==e.doctorData?null:e.doctorData.doctorDetails.fullName),t.xp6(8),t.hij("",e.totalFee?e.totalFee:"00",".0 tk. "),t.xp6(3),t.Q6J("ngForOf",e.inputConfigs),t.xp6(1),t.Q6J("ngIf",(null==e.filterData?null:e.filterData.length)>0)}}function lt(n,d){1&n&&t._uU(0," Data is loading... ")}function st(n,d){if(1&n&&(t.TgZ(0,"option",62),t._uU(1),t.qZA()),2&n){const e=d.$implicit;t.Q6J("value",e.id),t.xp6(1),t.Oqu(e.name)}}function pt(n,d){if(1&n){const e=t.EpF();t.TgZ(0,"div")(1,"label",58),t._uU(2,"Select your patient"),t.qZA(),t.ynx(3),t.TgZ(4,"select",59),t.NdJ("input",function(i){t.CHM(e);const S=t.oxw();return t.KtG(S.getSinglePatientData(i))}),t.TgZ(5,"option",60),t._uU(6,"--Select Patient--"),t.qZA(),t.YNc(7,st,2,2,"option",61),t.qZA(),t.BQk(),t.qZA()}if(2&n){const e=t.oxw();t.xp6(4),t.Q6J("value",e.value),t.xp6(3),t.Q6J("ngForOf",e.userPatientList)}}function ut(n,d){if(1&n&&(t.ynx(0,16),t._UZ(1,"app-input",63),t.BQk()),2&n){const e=d.$implicit,o=d.index;t.xp6(1),t.Tol(0==o||1==o?"w-1/2":"w-1/3"),t.Q6J("label",e.label)("inputId",e.inputId)("isSelectInput",e.isSelect)("readonly",!!e.readonly&&e.readonly)("options",e.options)("formControlName",e.formControlName)("placeholder",e.label)("type",e.type)}}function bt(n,d){1&n&&(t.TgZ(0,"div",64),t.O4$(),t.TgZ(1,"svg",65),t._UZ(2,"path",66),t.qZA(),t.kcU(),t.TgZ(3,"span"),t._uU(4,"Continue"),t.qZA()())}function ft(n,d){1&n&&t._UZ(0,"span",67)}let gt=(()=>{class n{constructor(e,o,i,S,w,x,u,h,k,B,T,g){this.fb=e,this.UserinfoStateService=o,this.PatientProfileService=i,this.LoaderService=S,this.TosterService=w,this.DoctorScheduleService=x,this.dialogRef=u,this.DoctorScheduleStateService=h,this.AppointmentService=k,this.AuthService=B,this.DoctorBookingStateService=T,this.doctorData=g,this.isBookMyselfClick=!1,this.isBookOther=!1,this.isNewUser=!1,this.isExistUser=!0,this.btnLoader=!1,this.userPatientList=[],this.showAppointmentTypeSelectBox=!0,this.stepHeading="",this.hasValidCode=!1,this.createNewPatientInfo={},this.alreadyExistPatient={},this.subs=new X.Y,this.inputForCreatePatient=_.cv,this.firstFormGroup=this.fb.group({firstCtrl:["",m.kI.required]}),this.secondFormGroup=this.fb.group({secondCtrl:["",m.kI.required]})}ngAfterViewInit(){}ngOnInit(){this.dataLoader=!0,this.DoctorScheduleStateService.getSelectedSlot().pipe().subscribe(u=>{this.selectedSlotInfo=u});let e=this.doctorData.doctorScheduleInfo;if(e){let u=this.doctorData.doctorScheduleInfo.map(h=>({name:h.scheduleName,id:h.scheduleName}));this.inputConfigs=(0,_.Q0)(u),this.dataLoader=!1}else this.inputConfigs=(0,_.Q0)([]),this.dataLoader=!1;this.UserinfoStateService.getData().pipe((0,v.w)(u=>(this.profileInfo=u,this.loadForm(),u?this.UserinfoStateService.getUserPatientData().pipe((0,b.U)(h=>h.map(k=>({name:k.patientName,id:k.id})))):(0,D.of)([])))).subscribe(u=>{this.userPatientList=u});const o=this.form.get("appointmentDate")?.valueChanges.pipe((0,y.O)(this.form.get("appointmentDate")?.value)),i=this.form.get("doctorScheduleType")?.valueChanges.pipe((0,y.O)(this.form.get("doctorScheduleType")?.value)),S=this.form.get("consultancyType")?.valueChanges.pipe((0,y.O)(this.form.get("consultancyType")?.value)),w=this.form.get("appointmentType")?.valueChanges.pipe((0,y.O)(this.form.get("appointmentType")?.value));let x=0;o.pipe(z([i,S,w])).subscribe(u=>{let h=[],k=!1;const B=(0,_.is)(String(u[0]));if(u[0]&&u[1]){this.showAppointmentTypeSelectBox=!1,x=3;const T=new Map;e.forEach(N=>{this.filterDoctorId=N.doctorProfileId;const I=`${N.scheduleName}`;T.has(I)||T.set(I,[]),T.get(I).push(N)});const g=`${u[1]}`;T.has(g)&&T.get(g).forEach(I=>{const $=this.isDayAvailable(I.doctorScheduleDaySession,B);if($.length>0)return h=$.map(mt=>{let ht=this.getLeftSlotForBooking(I,u[0])[mt.id];return{...mt,leftPatient:ht}}),void(k=!0)})}this.showAppointmentTypeSelectBox=!0,!k&&3==x&&this.TosterService.customToast("No schedule found!","warning"),this.filterData=h,this.DoctorScheduleStateService.sendDoctorAvailableSlotData(h)}),i.pipe(z(w)).subscribe(u=>{const h=e.filter(k=>k.scheduleName===u[0]);h?h.map(k=>{let B=k.doctorFeesSetup.find(T=>T.appointmentType==u[1]?T.totalFee:"");this.totalFee=B?.totalFee,this.selectedFeesInfo=B}):console.log("Fee not found for the given schedule and appointment type.")})}getLeftSlotForBooking(e,o){const i={};e.appointments.forEach(w=>{const x=w.doctorScheduleDaySessionId,u=w.appointmentDate.split("T")[0];i[x]||(i[x]={}),i[x][u]?i[x][u]++:i[x][u]=1});const S={};return e.doctorScheduleDaySession.forEach(w=>{const x=w.id,u=o.split("T")[0];S[x]=w.noOfPatients-(i[x]&&i[x][u]||0)}),S}isDayAvailable(e,o){return e.filter(i=>i.scheduleDayofWeek===o)}loadForm(){this.bookingForm=this.fb.group({bookMyself:[""],bookOther:[""],patientName:[""],age:[""],mobile:[""]}),this.form=this.fb.group({consultancyType:[""],doctorScheduleType:["",m.kI.required],appointmentDate:["",m.kI.required],appointmentType:["",m.kI.required]}),this.createPatientForm=this.fb.group({isSelf:[!1,m.kI.required],patientName:["",m.kI.required],patientProfileId:[""],age:[,m.kI.required],gender:[,m.kI.required],bloodGroup:["",m.kI.required],patientMobileNo:["",m.kI.required],patientEmail:[this.profileInfo?.email||"admin@gmail.com",m.kI.required],createdBy:[this.profileInfo.fullName,m.kI.required],creatorEntityId:[this.profileInfo.id,m.kI.required]})}onStepChange(e){if(console.log(this.createPatientForm.value),e>=0&&e<3&&(this.activeTab=e),console.log(this.alreadyExistPatient),3===e&&this.form.valid){this.stepHeading="Confirm";const{doctorScheduleId:o,id:i,scheduleDayofWeek:S}=this.selectedSlotInfo,w=this.doctorData.doctorScheduleInfo.find(I=>I.id===o),{consultancyType:x,doctorChamberId:u,doctorProfileId:h,scheduleType:k}=w,{appointmentType:B,appointmentDate:T}=this.form.value;let g="";this.UserinfoStateService.getData().subscribe(I=>g=I);const N={doctorScheduleId:o,doctorProfileId:h,doctorName:this.doctorData?.doctorDetails.fullName,doctorCode:this.doctorData?.doctorDetails.doctorCode,patientProfileId:this.alreadyExistPatient?.id?this.alreadyExistPatient?.id:this.createNewPatientInfo.id?this.createNewPatientInfo?.id:g?.id,patientName:this.alreadyExistPatient?.patientName?this.alreadyExistPatient?.patientName:this.createNewPatientInfo?.patientName?this.createNewPatientInfo?.patientName:g?.fullName,patientCode:this.alreadyExistPatient?.patientCode?this.alreadyExistPatient?.patientCode:this.createNewPatientInfo?.patientCode?this.createNewPatientInfo?.patientCode:g?.patientCode,patientMobileNo:this.alreadyExistPatient?.patientMobileNo?this.alreadyExistPatient?.patientMobileNo:this.createNewPatientInfo?.patientMobileNo?this.createNewPatientInfo?.patientMobileNo:g?.mobileNo,patientEmail:this.alreadyExistPatient?.patientEmail?this.alreadyExistPatient?.patientEmail:this.createNewPatientInfo?.patientEmail?this.createNewPatientInfo?.patientEmail:g.email||"admin@gmail.com",consultancyType:x,doctorChamberId:u,scheduleType:k,doctorScheduleDaySessionId:i,scheduleDayofWeek:S,appointmentType:B,appointmentDate:T,appointmentTime:"",doctorFeesSetupId:this.selectedFeesInfo.id,doctorFee:this.selectedFeesInfo.totalFee,agentFee:0,platformFee:0,totalAppointmentFee:this.selectedFeesInfo.totalFee,appointmentStatus:1,appointmentPaymentStatus:2,appointmentCreatorId:g?.id};if(N&&g)return"bookMyself"==this.bookingForm.get("bookMyself")?.value&&this.PatientProfileService.update({id:g?.id,patientName:g.fullName,patientCode:g.patientCode,patientEmail:g.email?g.email:"admin@gmail.com",patientMobileNo:g.mobileNo}).subscribe($=>{this.createAppointment(N,e)}),void("bookOther"==this.bookingForm.get("bookOther")?.value&&this.createAppointment(N,e))}else{if(3!==e||this.form.valid)return;this.TosterService.customToast("Please select all the required fields","warning")}}createAppointment(e,o){this.AppointmentService.create(e).subscribe(i=>{this.DoctorBookingStateService.sendBookingData({...e,appointmentCode:i.appointmentCode}),this.activeTab=o})}userExistCheck(e){switch(this.createPatientForm.get(["patientName","age","gender","bloodGroup","patientMobileNo"])?.reset(),e){case"new-user":return this.isNewUser=!0,void(this.isExistUser=!1);case"exist-user":return this.isNewUser=!1,void(this.isExistUser=!0)}}createNewPatient(){if(this.createPatientForm.valid)if(this.isNewUser)try{this.btnLoader=!0,this.PatientProfileService.create(this.createPatientForm.value).subscribe(e=>{e.patientCode&&e.patientMobileNo&&this.PatientProfileService.getByPhoneAndCode(e.patientCode,e.patientMobileNo).subscribe(o=>{this.createNewPatientInfo=o}),this.btnLoader=!1,this.TosterService.customToast("Your patient is created!","success"),this.UserinfoStateService.getUserPatientInfo(this.profileInfo.id,"patient"),this.onStepChange(1)})}catch{this.TosterService.customToast("Something wrong! Please retry","error")}else this.onStepChange(1);else this.TosterService.customToast("Please field all the required fields","warning")}getSinglePatientData(e){e.target.value&&this.UserinfoStateService.getUserPatientData().subscribe(o=>o.find(i=>{i.id==e.target.value&&(this.alreadyExistPatient=i,this.createPatientForm.patchValue({patientProfileId:i.id,age:i.age,gender:i.gender,bloodGroup:i.bloodGroup,patientMobileNo:i.patientMobileNo,patientEmail:i.patientEmail,patientName:i.patientName,createdBy:i.createdBy,creatorEntityId:i.creatorEntityId}))}))}closeDialogs(){}}return n.\u0275fac=function(e){return new(e||n)(t.Y36(m.qu),t.Y36(q.Z),t.Y36(tt.j),t.Y36(et.D),t.Y36(Y.G),t.Y36(ot.P),t.Y36(j.so),t.Y36(R),t.Y36(G.H),t.Y36(nt.e),t.Y36(J),t.Y36(j.WI))},n.\u0275cmp=t.Xpm({type:n,selectors:[["app-booking-dialog"]],viewQuery:function(e,o){if(1&e&&(t.Gf(M,5),t.Gf(A,5),t.Gf(L.a,5)),2&e){let i;t.iGM(i=t.CRH())&&(o.buttonMyself=i.first),t.iGM(i=t.CRH())&&(o.buttonOthers=i.first),t.iGM(i=t.CRH())&&(o.customInputs=i)}},decls:66,vars:16,consts:[[1,"flex","justify-between","py-4","px-6","border-b-[1px]","items-center"],[1,"dashbord-heading-text"],[1,"mr-1","text-[18px]","fa-solid","fa-calendar"],[1,"btn-secondary-light",3,"click"],[1,"w-full","px-12","pt-5","pb-10"],[1,"mx-auto",3,"selectedIndex"],["stepper",""],[3,"stepControl"],[3,"formGroup"],[1,"grid","grid-row-2","w-full","gap-6"],[3,"click"],["type","radio","formControlName","bookMyself","id","bookMyself","value","bookMyself","required","",1,"hidden","peer"],["for","bookMyself",1,"inline-flex","items-center","justify-between","w-full","p-5","text-gray-500","bg-white","border","border-gray-200","rounded-lg","cursor-pointer","dark:hover:text-gray-300","dark:border-gray-700","dark:peer-checked:text-blue-500","peer-checked:border-blue-600","peer-checked:text-blue-600","hover:text-gray-600","hover:bg-gray-100","dark:text-gray-400","dark:bg-gray-800","dark:hover:bg-gray-700"],[1,"flex","items-center","gap-3"],[1,"fa-solid","fa-person","text-[44px]"],[1,"w-full","text-lg","font-semibold"],[1,"w-full"],["aria-hidden","true","xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 14 10",1,"w-5","h-5","ml-3"],["stroke","currentColor","stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M1 5h12m0 0L9 1m4 4L9 9"],["type","radio","formControlName","bookOther","id","bookOther","value","bookOther",1,"hidden","peer"],["for","bookOther",1,"inline-flex","items-center","justify-between","w-full","p-5","text-gray-500","bg-white","border","border-gray-200","rounded-lg","cursor-pointer","dark:hover:text-gray-300","dark:border-gray-700","dark:peer-checked:text-blue-500","peer-checked:border-blue-600","peer-checked:text-blue-600","hover:text-gray-600","hover:bg-gray-100","dark:text-gray-400","dark:bg-gray-800","dark:hover:bg-gray-700"],[1,"fa-solid","fa-people-robbery","text-[44px]"],[3,"stepControl","ariaSelected"],[4,"ngIf","ngIfElse"],["loader",""],[1,"flex","gap-4"],[1,"flex","items-center","px-4","border","border-gray-200","rounded","dark:border-gray-700"],["checked","","id","bordered-radio-2","type","radio","value","","name","bordered-radio",1,"w-4","h-4","text-blue-600","bg-gray-100","border-gray-300","focus:ring-0","dark:bg-gray-700","dark:border-gray-600",3,"click"],["for","bordered-radio-2",1,"w-full","py-2","ml-2","text-sm","font-medium","text-gray-900","dark:text-gray-300"],["id","bordered-radio-1","type","radio","value","","name","bordered-radio",1,"w-4","h-4","text-blue-600","bg-gray-100","border-gray-300","focus:ring-0","dark:bg-gray-700","dark:border-gray-600",3,"click"],["for","bordered-radio-1",1,"w-full","py-2","ml-2","text-sm","font-medium","text-gray-900","dark:text-gray-300"],[1,"pt-5"],[4,"ngIf"],[1,"w-full",3,"formGroup"],[1,"-mx-3","flex","flex-wrap"],["class","w-full",4,"ngFor","ngForOf"],[1,"flex","gap-5"],[1,"btn-secondary","py-2","mt-6",3,"click"],[1,"btn-secondary","bg-primary","py-2","mt-6",3,"click"],["class","flex items-center gap-1 text-white group-hover:text-primary",4,"ngIf"],["class","loading loading-dots loading-md",4,"ngIf"],[1,"flex","justify-between"],[1,"rounded-full","w-[50px]","h-[50px]","overflow-hidden","border-secondary","border-2"],["src","assets/doctor/dr.jpeg","alt","",1,"w-full","h-full","object-cover"],[1,"heading","text-[20px]"],[1,"py-0","px-3"],[1,"leading-0"],[1,"stat-title"],[1,"stat-value","text-secondary","text[24px]"],[1,"h-px","my-8","bg-gray-200","border-0","dark:bg-gray-700"],["class","py-3",4,"ngIf"],[1,"flex","gap-5","mt-10","w-full"],[1,"btn-secondary","py-2","bg-primary/90",3,"click"],[1,"btn-secondary","py-2",3,"click"],[1,"sm:w-1/2","h-fit",3,"label","inputId","isSelectInput","readonly","options","formControlName","formGroup","type"],[1,"py-3"],[1,"font-Roboto","text-[14px]","font-semibold","text-primary/90"],[1,"mt-2"],["for","",1,"label"],[1,"form_input",3,"value","input"],["value",""],[3,"value",4,"ngFor","ngForOf"],[3,"value"],[3,"label","inputId","isSelectInput","readonly","options","formControlName","placeholder","type"],[1,"flex","items-center","gap-1","text-white","group-hover:text-primary"],["xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 24 24","stroke","currentColor","stroke-width","2",1,"h-6","w-6"],["stroke-linecap","round","stroke-linejoin","round","d","M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"],[1,"loading","loading-dots","loading-md"]],template:function(e,o){if(1&e&&(t.TgZ(0,"div",0)(1,"h1",1),t._UZ(2,"i",2),t._uU(3),t.qZA(),t.TgZ(4,"button",3),t.NdJ("click",function(){return o.dialogRef.close(!1)}),t._uU(5,"Close"),t.qZA()(),t.TgZ(6,"div",4)(7,"mat-stepper",5,6)(9,"mat-step",7)(10,"form",8)(11,"ul",9)(12,"li",10),t.NdJ("click",function(){return o.onStepChange(1)}),t._UZ(13,"input",11),t.TgZ(14,"label",12)(15,"div",13),t._UZ(16,"i",14),t.TgZ(17,"div")(18,"div",15),t._uU(19,"Book for Self"),t.qZA(),t.TgZ(20,"div",16),t._uU(21,"If you are patient!"),t.qZA()()(),t.O4$(),t.TgZ(22,"svg",17),t._UZ(23,"path",18),t.qZA()()(),t.kcU(),t.TgZ(24,"li",10),t.NdJ("click",function(){return o.onStepChange(2)}),t._UZ(25,"input",19),t.TgZ(26,"label",20)(27,"div",13),t._UZ(28,"i",21),t.TgZ(29,"div")(30,"div",15),t._uU(31,"Book for Other"),t.qZA(),t.TgZ(32,"div",16),t._uU(33,"If you are not patient!"),t.qZA()()(),t.O4$(),t.TgZ(34,"svg",17),t._UZ(35,"path",18),t.qZA()()()()()(),t.kcU(),t.TgZ(36,"mat-step",22),t.YNc(37,dt,26,5,"div",23),t.YNc(38,lt,1,0,"ng-template",null,24,t.W1O),t.qZA(),t.TgZ(40,"mat-step",7)(41,"div",25)(42,"div",26)(43,"input",27),t.NdJ("click",function(){return o.userExistCheck("exist-user")}),t.qZA(),t.TgZ(44,"label",28),t._uU(45,"Already Exist"),t.qZA()(),t.TgZ(46,"div",26)(47,"input",29),t.NdJ("click",function(){return o.userExistCheck("new-user")}),t.qZA(),t.TgZ(48,"label",30),t._uU(49,"New Patient"),t.qZA()()(),t.TgZ(50,"div",31),t.YNc(51,pt,8,2,"div",32),t.TgZ(52,"div",31)(53,"form",33)(54,"div",34),t.YNc(55,ut,2,10,"ng-container",35),t.qZA()()()(),t.TgZ(56,"div",36)(57,"button",37),t.NdJ("click",function(){return o.onStepChange(0)}),t._uU(58,"Back"),t.qZA(),t.TgZ(59,"button",38),t.NdJ("click",function(){return o.createNewPatient()}),t.YNc(60,bt,5,0,"div",39),t.YNc(61,ft,1,0,"span",40),t.qZA()()(),t.TgZ(62,"mat-step",7),t._UZ(63,"app-booking-review"),t.qZA(),t.TgZ(64,"mat-step",7),t._UZ(65,"app-booking-payment"),t.qZA()()()),2&e){const i=t.MAs(39);t.xp6(3),t.hij(" Booking ",o.stepHeading," "),t.xp6(4),t.Q6J("selectedIndex",o.activeTab),t.xp6(2),t.Q6J("stepControl",o.firstFormGroup),t.xp6(1),t.Q6J("formGroup",o.bookingForm),t.xp6(26),t.Q6J("stepControl",o.secondFormGroup)("ariaSelected",o.activeTab),t.xp6(1),t.Q6J("ngIf",!o.dataLoader)("ngIfElse",i),t.xp6(3),t.Q6J("stepControl",o.thirdFormGroup),t.xp6(11),t.Q6J("ngIf",o.isExistUser),t.xp6(2),t.Q6J("formGroup",o.createPatientForm),t.xp6(2),t.Q6J("ngForOf",o.inputForCreatePatient),t.xp6(5),t.Q6J("ngIf",0==o.btnLoader),t.xp6(1),t.Q6J("ngIf",1==o.btnLoader),t.xp6(1),t.Q6J("stepControl",o.fourFormGroup),t.xp6(2),t.Q6J("stepControl",o.fiveFormGroup)}},dependencies:[O.sg,O.O5,m._Y,m.YN,m.Kr,m.Fj,m._,m.JJ,m.JL,m.Q7,m.sg,m.u,L.a,Q.C0,Q.Vq,H,a,p],styles:[".mat-horizontal-stepper-header-container{display:none!important}  .mat-horizontal-content-container{padding:0!important}input[type=radio][_ngcontent-%COMP%]:checked + .radio-card[_ngcontent-%COMP%]{background:#006c93;color:#fff}"]}),n})()},6240:(E,C,r)=>{r.d(C,{Y:()=>_});var _=function(){function v(){this._subs=[]}return v.prototype.add=function(){for(var b=[],D=0;D<arguments.length;D++)b[D]=arguments[D];this._subs=this._subs.concat(b)},Object.defineProperty(v.prototype,"sink",{set:function(b){this._subs.push(b)},enumerable:!0,configurable:!0}),v.prototype.unsubscribe=function(){this._subs.forEach(function(b){return b&&function(v){return"function"==typeof v}(b.unsubscribe)&&b.unsubscribe()}),this._subs=[]},v}()},4859:(E,C,r)=>{r.d(C,{ot:()=>H});var m=r(4650),_=r(3238);let H=(()=>{class f{}return f.\u0275fac=function(a){return new(a||f)},f.\u0275mod=m.oAB({type:f}),f.\u0275inj=m.cJS({imports:[_.BQ,_.si,_.BQ]}),f})()}}]);