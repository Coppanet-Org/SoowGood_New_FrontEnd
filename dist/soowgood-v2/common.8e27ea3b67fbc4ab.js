"use strict";(self.webpackChunksoowgood_v2=self.webpackChunksoowgood_v2||[]).push([[8592],{5654:(m,c,s)=>{s.d(c,{j:()=>p});var i=s(4650),u=s(8481);let p=(()=>{class t{constructor(r){this.restService=r,this.apiName="Default",this.create=(e,a)=>this.restService.request({method:"POST",url:"/api/app/agent-profile",body:e},{apiName:this.apiName,...a}),this.get=(e,a)=>this.restService.request({method:"GET",url:`/api/app/agent-profile/${e}`},{apiName:this.apiName,...a}),this.getByUserId=(e,a)=>this.restService.request({method:"GET",url:`/api/app/agent-profile/by-user-id/${e}`},{apiName:this.apiName,...a}),this.getByUserName=(e,a)=>this.restService.request({method:"GET",url:"/api/app/agent-profile/by-user-name",params:{userName:e}},{apiName:this.apiName,...a}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/agent-profile"},{apiName:this.apiName,...e}),this.getlByUserName=(e,a)=>this.restService.request({method:"GET",url:"/api/app/agent-profile/l-by-user-name",params:{userName:e}},{apiName:this.apiName,...a}),this.update=(e,a)=>this.restService.request({method:"PUT",url:"/api/app/agent-profile",body:e},{apiName:this.apiName,...a})}}return t.\u0275fac=function(r){return new(r||t)(i.LFG(u.vgb))},t.\u0275prov=i.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},1398:(m,c,s)=>{s.d(c,{s:()=>p});var i=s(4650),u=s(8481);let p=(()=>{class t{constructor(r){this.restService=r,this.apiName="Default",this.getDashboadDataForDoctor=(e,a)=>this.restService.request({method:"GET",url:"/api/app/dashboard/dashboad-data-for-doctor",params:{doctorid:e}},{apiName:this.apiName,...a}),this.getDashboadDataForPatient=(e,a,o)=>this.restService.request({method:"GET",url:`/api/app/dashboard/dashboad-data-for-patient/${e}`,params:{role:a}},{apiName:this.apiName,...o}),this.getDashboardAppointmentListForDoctor=(e,a,o)=>this.restService.request({method:"GET",url:`/api/app/dashboard/dashboard-appointment-list-for-doctor/${e}`,params:{day:a}},{apiName:this.apiName,...o}),this.getDashboardAppointmentListForPatient=(e,a,o,d)=>this.restService.request({method:"GET",url:`/api/app/dashboard/dashboard-appointment-list-for-patient/${e}`,params:{role:a,day:o}},{apiName:this.apiName,...d})}}return t.\u0275fac=function(r){return new(r||t)(i.LFG(u.vgb))},t.\u0275prov=i.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},6153:(m,c,s)=>{s.d(c,{R:()=>p});var i=s(4650),u=s(8481);let p=(()=>{class t{constructor(r){this.restService=r,this.apiName="Default",this.create=(e,a)=>this.restService.request({method:"POST",url:"/api/app/degree",body:e},{apiName:this.apiName,...a}),this.get=(e,a)=>this.restService.request({method:"GET",url:`/api/app/degree/${e}`},{apiName:this.apiName,...a}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/degree"},{apiName:this.apiName,...e}),this.update=(e,a)=>this.restService.request({method:"PUT",url:"/api/app/degree",body:e},{apiName:this.apiName,...a})}}return t.\u0275fac=function(r){return new(r||t)(i.LFG(u.vgb))},t.\u0275prov=i.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},2339:(m,c,s)=>{s.d(c,{K:()=>p});var i=s(4650),u=s(8481);let p=(()=>{class t{constructor(r){this.restService=r,this.apiName="Default",this.create=(e,a)=>this.restService.request({method:"POST",url:"/api/app/doctor-profile",body:e},{apiName:this.apiName,...a}),this.get=(e,a)=>this.restService.request({method:"GET",url:`/api/app/doctor-profile/${e}`},{apiName:this.apiName,...a}),this.getAllDoctorsSearchList=(e,a,o,d,h)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctors-search-list",params:{name:e,consultType:a,speciality:o,specialization:d}},{apiName:this.apiName,...h}),this.getByUserId=(e,a)=>this.restService.request({method:"GET",url:`/api/app/doctor-profile/by-user-id/${e}`},{apiName:this.apiName,...a}),this.getByUserName=(e,a)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/by-user-name",params:{userName:e}},{apiName:this.apiName,...a}),this.getCurrentlyOnlineDoctorList=e=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/currently-online-doctor-list"},{apiName:this.apiName,...e}),this.getDoctorDetailsByAdmin=(e,a)=>this.restService.request({method:"GET",url:`/api/app/doctor-profile/${e}/doctor-details-by-admin`},{apiName:this.apiName,...a}),this.getDoctorListFilter=(e,a,o)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-filter",params:{name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline,offset:a.offset,limit:a.limit,pageNo:a.pageNo,pageSize:a.pageSize,sortBy:a.sortBy,sortOrder:a.sortOrder,isDesc:a.isDesc}},{apiName:this.apiName,...o}),this.getDoctorListSearchByName=(e,a,o)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-search-by-name",params:{name:e,offset:a.offset,limit:a.limit,pageNo:a.pageNo,pageSize:a.pageSize,sortBy:a.sortBy,sortOrder:a.sortOrder,isDesc:a.isDesc}},{apiName:this.apiName,...o}),this.getDoctorListWithSearchFilter=(e,a,o,d,h,l,g)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-with-search-filter",params:{name:e,consultancy:a,speciality:o,specialization:d,skipValue:h,currentLimit:l}},{apiName:this.apiName,...g}),this.getDoctorsCountByFilters=(e,a)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctors-count-by-filters",params:{name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline}},{apiName:this.apiName,...a}),this.getDoctorsCountByName=(e,a)=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctors-count-by-name",params:{name:e}},{apiName:this.apiName,...a}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/doctor-profile"},{apiName:this.apiName,...e}),this.getListDoctorListByAdmin=e=>this.restService.request({method:"GET",url:"/api/app/doctor-profile/doctor-list-by-admin"},{apiName:this.apiName,...e}),this.update=(e,a)=>this.restService.request({method:"PUT",url:"/api/app/doctor-profile",body:e},{apiName:this.apiName,...a}),this.updateActiveStatusByAdminByIdAndActiveStatus=(e,a,o)=>this.restService.request({method:"PUT",url:`/api/app/doctor-profile/active-status-by-admin/${e}`,params:{activeStatus:a}},{apiName:this.apiName,...o}),this.updateDocotrProfile=(e,a)=>this.restService.request({method:"PUT",url:"/api/app/doctor-profile/docotr-profile",body:e},{apiName:this.apiName,...a}),this.updateDoctorsOnlineStatusByIdAndOnlineStatus=(e,a,o)=>this.restService.request({method:"PUT",url:`/api/app/doctor-profile/doctors-online-status/${e}`,params:{onlineStatus:a}},{apiName:this.apiName,...o}),this.updateProfileStep=(e,a,o)=>this.restService.request({method:"PUT",url:`/api/app/doctor-profile/profile-step/${e}`,params:{step:a}},{apiName:this.apiName,...o})}}return t.\u0275fac=function(r){return new(r||t)(i.LFG(u.vgb))},t.\u0275prov=i.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},6084:(m,c,s)=>{s.d(c,{j:()=>p});var i=s(4650),u=s(8481);let p=(()=>{class t{constructor(r){this.restService=r,this.apiName="Default",this.create=(e,a)=>this.restService.request({method:"POST",url:"/api/app/patient-profile",body:e},{apiName:this.apiName,...a}),this.get=(e,a)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/${e}`},{apiName:this.apiName,...a}),this.getByPhoneAndCode=(e,a,o)=>this.restService.request({method:"GET",url:"/api/app/patient-profile/by-phone-and-code",params:{pCode:e,pPhone:a}},{apiName:this.apiName,...o}),this.getByUserId=(e,a)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/by-user-id/${e}`},{apiName:this.apiName,...a}),this.getByUserName=(e,a)=>this.restService.request({method:"GET",url:"/api/app/patient-profile/by-user-name",params:{userName:e}},{apiName:this.apiName,...a}),this.getDoctorListByCreatorIdFilter=(e,a,o,d)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/doctor-list-by-creator-id-filter/${e}`,params:{name:a.name,consultancyType:a.consultancyType,specialityId:a.specialityId,specializationId:a.specializationId,appointmentStatus:a.appointmentStatus,fromDate:a.fromDate,toDate:a.toDate,isCurrentOnline:a.isCurrentOnline,offset:o.offset,limit:o.limit,pageNo:o.pageNo,pageSize:o.pageSize,sortBy:o.sortBy,sortOrder:o.sortOrder,isDesc:o.isDesc}},{apiName:this.apiName,...d}),this.getDoctorListFilter=(e,a,o)=>this.restService.request({method:"GET",url:"/api/app/patient-profile/doctor-list-filter",params:{name:e.name,consultancyType:e.consultancyType,specialityId:e.specialityId,specializationId:e.specializationId,appointmentStatus:e.appointmentStatus,fromDate:e.fromDate,toDate:e.toDate,isCurrentOnline:e.isCurrentOnline,offset:a.offset,limit:a.limit,pageNo:a.pageNo,pageSize:a.pageSize,sortBy:a.sortBy,sortOrder:a.sortOrder,isDesc:a.isDesc}},{apiName:this.apiName,...o}),this.getList=e=>this.restService.request({method:"GET",url:"/api/app/patient-profile"},{apiName:this.apiName,...e}),this.getListPatientListByAdmin=e=>this.restService.request({method:"GET",url:"/api/app/patient-profile/patient-list-by-admin"},{apiName:this.apiName,...e}),this.getPatientListByUserProfileId=(e,a)=>this.restService.request({method:"GET",url:`/api/app/patient-profile/patient-list-by-user-profile-id/${e}`},{apiName:this.apiName,...a}),this.update=(e,a)=>this.restService.request({method:"PUT",url:"/api/app/patient-profile",body:e},{apiName:this.apiName,...a})}}return t.\u0275fac=function(r){return new(r||t)(i.LFG(u.vgb))},t.\u0275prov=i.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},5374:(m,c,s)=>{s.d(c,{V:()=>p});var i=s(4650),u=s(8481);let p=(()=>{class t{constructor(r){this.restService=r,this.apiName="Default",this.isUserExistsByUserName=(e,a)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/is-user-exists",params:{userName:e}},{apiName:this.apiName,...a}),this.loginByUserDto=(e,a)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/login",body:e},{apiName:this.apiName,...a}),this.refreshAccessTokenByUser=(e,a)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/refresh-access-token",body:e},{apiName:this.apiName,...a}),this.resetPasswordByInputDto=(e,a)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/reset-password",body:e},{apiName:this.apiName,...a}),this.signupUserByUserDtoAndPasswordAndRole=(e,a,o,d)=>this.restService.request({method:"POST",url:"/api/app/user-accounts/signup-user",params:{password:a,role:o},body:e},{apiName:this.apiName,...d})}}return t.\u0275fac=function(r){return new(r||t)(i.LFG(u.vgb))},t.\u0275prov=i.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},1941:(m,c,s)=>{s.d(c,{g:()=>p});var i=s(4650),u=s(6895);let p=(()=>{class t{}return t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=i.Xpm({type:t,selectors:[["app-dashboard-statisticscard"]],inputs:{details:"details"},decls:10,vars:5,consts:[[1,"flex","gap-4","cursor-pointer","group","justify-between","bg-white","px-5","py-3","items-center","rounded-lg","border-[1px]","max-w-full","shadow-2xl","shadow-blue-400/20"],[1,""],[1,"font-medium","transition-all","duration-100"],[1,"dashbord-heading-text","text-[24px]"],[1,"text-[14px]","font-normal","text-green-700"],[1,"group-hover:scale-105","transition-all","duration-100","w-[50px]","h-[50px]","shadow-xl","text-center","border-radius-md","bg-gradient-to-r","flex","items-center","justify-center","from-cyan-500","to-blue-500","rounded-lg"],[1,"fa-solid","fa-bed-pulse","box-shado","text-blue-50","text-[24px]"]],template:function(r,e){1&r&&(i.TgZ(0,"div",0)(1,"div",1)(2,"h3",2),i._uU(3),i.qZA(),i.TgZ(4,"h1",3),i._uU(5),i.ALo(6,"currency"),i._UZ(7,"span",4),i.qZA()(),i.TgZ(8,"div",5),i._UZ(9,"i",6),i.qZA()()),2&r&&(i.xp6(3),i.Oqu(e.details.title),i.xp6(2),i.Oqu(e.details.currency?i.xi3(6,2,e.details.data,"BDT "):e.details.data))},dependencies:[u.H9]}),t})()},2356:(m,c,s)=>{s.d(c,{B:()=>p});var i=s(6895),u=s(4650);let p=(()=>{class t{}return t.\u0275fac=function(r){return new(r||t)},t.\u0275mod=u.oAB({type:t}),t.\u0275inj=u.cJS({imports:[i.ez]}),t})()},8047:(m,c,s)=>{s.d(c,{q:()=>u});var i=s(4650);let u=(()=>{class p{}return p.\u0275fac=function(n){return new(n||p)},p.\u0275cmp=i.Xpm({type:p,selectors:[["app-prescriptions"]],decls:10,vars:0,consts:[[1,"overflow-hidden","doctor-dashboard_midcontent_container","w-ful"],[1,"flex","items-center","justify-left"],[1,"w-full","h-screen","bg-white"],[1,"relative","overflow-x-auto","sm:rounded-lg","px-8","py-6"],[1,"flex","gap-4","items-center","justify-between"],[1,"dashbord-heading-text","text-[22px]"],[1,"fa-solid","fa-building-columns","mr-1"],[1,"w-full","mt-6"]],template:function(n,r){1&n&&(i.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"div",3)(4,"div",4)(5,"h1",5),i._UZ(6,"i",6),i._uU(7," Prescriptions"),i.qZA()(),i.TgZ(8,"div",7),i._uU(9," prescriptions here "),i.qZA()()()()())}}),p})()},1936:(m,c,s)=>{s.d(c,{f:()=>t});var i=s(1135),u=s(4650),p=s(2339);let t=(()=>{class n{constructor(e){this.DoctorProfileService=e,this.doctorsList=new i.X([]),this.currentlyOnlineDoctor=new i.X([])}getDoctorListData(){return this.doctorsList.asObservable()}getCurrentlyOnlineDoctorData(){return this.currentlyOnlineDoctor.asObservable()}sendDoctorListData(e){this.doctorsList.next(e)}sendCurrentlyOnlineDoctorData(e){this.currentlyOnlineDoctor.next(e)}getAllDoctorList(){return this.DoctorProfileService.getList().subscribe(e=>{this.sendDoctorListData(e)}),this.getDoctorListData()}getCurrentlyOnlineDoctorList(){return this.DoctorProfileService.getCurrentlyOnlineDoctorList().subscribe(e=>{this.sendCurrentlyOnlineDoctorData(e)}),this.getCurrentlyOnlineDoctorData()}}return n.\u0275fac=function(e){return new(e||n)(u.LFG(p.K))},n.\u0275prov=u.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),n})()},2381:(m,c,s)=>{s.d(c,{G:()=>p});var i=s(4650),u=s(9784);let p=(()=>{class t{constructor(r){this.toasterService=r}customToast(r,e){return this.toasterService[e](r,this.getToastOptions(e))}getToastOptions(r){const e=this.getBackgroundColor(r);return{duration:3e3,style:{padding:"10px 16px",color:this.getTextColor(r),background:e},iconTheme:this.getIconColor(r)}}getBackgroundColor(r){switch(r){case"success":return"rgb(0 171 7 / 100%)";case"error":return"rgb(255 0 0 / 100%) ";case"warning":return"rgb(255 179 68 / 100%)";default:return"#c2e0c6"}}getTextColor(r){switch(r){case"success":case"error":return"#f1f1f1";case"warning":return"#7a5600";default:return"#333"}}getIconColor(r){switch(r){case"success":default:return{primary:"#005539",secondary:"#f1f1f1"};case"error":return{primary:"#f44336",secondary:"#f1f1f1"};case"warning":return{primary:"#483500",secondary:"#f1f1f1"}}}}return t.\u0275fac=function(r){return new(r||t)(i.LFG(u.jE))},t.\u0275prov=i.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},534:(m,c,s)=>{s.d(c,{h:()=>i});const i=["Afghanistan","Albania","Algeria","Andorra","Angola","Antigua and Barbuda","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina Faso","Burundi","Cabo Verde","Cambodia","Cameroon","Canada","Central African Republic","Chad","Chile","China","Colombia","Comoros","Congo (Congo-Brazzaville)","Costa Rica","Croatia","Cuba","Cyprus","Czechia (Czech Republic)","Democratic Republic of the Congo (Congo-Kinshasa)","Denmark","Djibouti","Dominica","Dominican Republic","East Timor (Timor-Leste)","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Holy See","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Ivory Coast","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Mauritius","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar (formerly Burma)","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","North Korea","North Macedonia (formerly Macedonia)","Norway","Oman","Pakistan","Palau","Palestine State","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Saint Kitts and Nevis","Saint Lucia","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Korea","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"]}}]);