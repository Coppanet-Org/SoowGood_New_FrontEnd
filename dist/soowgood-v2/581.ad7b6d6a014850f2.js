"use strict";(self.webpackChunksoowgood_v2=self.webpackChunksoowgood_v2||[]).push([[581],{7060:(D,b,l)=>{l.d(b,{G:()=>$});var t=l(4006),v=l(5412),P=l(3900),d=l(4004),m=l(9646),a=l(6516),r=l(1873),o=l(2537),e=l(4650),_=l(427),g=l(2381),u=l(6084),f=l(629),C=l(6895),U=l(1951),N=l(8824),L=l(470);function y(p,h){if(1&p){const n=e.EpF();e.TgZ(0,"div")(1,"div",2),e._UZ(2,"img",3),e.qZA(),e.TgZ(3,"div",4)(4,"p"),e._uU(5,"You must be "),e.TgZ(6,"a",5),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.dialogRef.close())}),e._uU(7,"Login! "),e.qZA(),e._uU(8," to continue!"),e.qZA(),e.TgZ(9,"p"),e._uU(10,"or"),e.qZA(),e.TgZ(11,"p")(12,"a",6),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.dialogRef.close())}),e._uU(13,"Register"),e.qZA(),e._uU(14," a new account."),e.qZA()()()}}function B(p,h){1&p&&(e.TgZ(0,"div",7),e._uU(1," You are an authorized "),e.TgZ(2,"strong"),e._uU(3,"Doctor"),e.qZA(),e._uU(4,". If you want to consult a doctor then you have to login as a patient.\n"),e.qZA())}function k(p,h){if(1&p&&(e.TgZ(0,"option",73),e._uU(1),e.qZA()),2&p){const n=h.$implicit;e.Q6J("value",n.id),e.xp6(1),e.Oqu(n.name)}}function q(p,h){if(1&p){const n=e.EpF();e.TgZ(0,"div")(1,"label",70),e._uU(2,"Select your patient"),e.qZA(),e.ynx(3),e.TgZ(4,"select",71),e.NdJ("input",function(s){e.CHM(n);const x=e.oxw(2);return e.KtG(x.getSinglePatientData(s))}),e.TgZ(5,"option",72),e._uU(6,"--Select Patient--"),e.qZA(),e.YNc(7,k,2,2,"option",51),e.qZA(),e.BQk(),e.qZA()}if(2&p){const n=e.oxw(2);e.xp6(7),e.Q6J("ngForOf",n.userPatientList)}}function T(p,h){1&p&&(e.TgZ(0,"p",74),e._uU(1," Please enter patient name. "),e.qZA())}function O(p,h){1&p&&(e.TgZ(0,"p",74),e._uU(1," Patient name should contain only letters and numbers at the end (optional). "),e.qZA())}function i(p,h){1&p&&(e.TgZ(0,"p",74),e._uU(1," Patient name should be at least 3 characters long "),e.qZA())}function M(p,h){1&p&&(e.TgZ(0,"p",74),e._uU(1," Please enter patient age. "),e.qZA())}function F(p,h){1&p&&(e.TgZ(0,"p",74),e._uU(1," Age should be a number. "),e.qZA())}function G(p,h){1&p&&(e.TgZ(0,"p",74),e._uU(1," You must enter a valid mobile number! "),e.qZA())}function R(p,h){1&p&&(e.TgZ(0,"p",74),e._uU(1," Mobile number should have exactly 11 digits and follow the Bangladeshi format! "),e.qZA())}function J(p,h){if(1&p&&(e.TgZ(0,"option",73),e._uU(1),e.qZA()),2&p){const n=h.$implicit;e.Q6J("value",n.id),e.xp6(1),e.Oqu(n.name)}}function W(p,h){1&p&&(e.TgZ(0,"p",75),e._uU(1," Please select gender! "),e.qZA())}function K(p,h){1&p&&(e.TgZ(0,"p",75),e._uU(1," Please select blood group! "),e.qZA())}function Y(p,h){1&p&&(e.TgZ(0,"div",76)(1,"span"),e._uU(2,"Continue"),e.qZA()())}function Q(p,h){1&p&&e._UZ(0,"span",77)}function z(p,h){if(1&p){const n=e.EpF();e.TgZ(0,"div")(1,"div",8)(2,"h1",9),e._UZ(3,"i",10),e._uU(4," Booking "),e.qZA(),e.TgZ(5,"button",11),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.dialogRef.close())}),e._uU(6,"Close"),e.qZA()(),e.TgZ(7,"div",12)(8,"mat-stepper",13,14)(10,"mat-step",15)(11,"form",16)(12,"ul",17)(13,"li",18),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.onStepChange(2,"self"))}),e._UZ(14,"input",19),e.TgZ(15,"label",20)(16,"div",21),e._UZ(17,"i",22),e.TgZ(18,"div")(19,"div",23),e._uU(20),e.qZA(),e.TgZ(21,"div",24),e._uU(22,"If you are patient!"),e.qZA()()(),e.O4$(),e.TgZ(23,"svg",25),e._UZ(24,"path",26),e.qZA()()(),e.kcU(),e.TgZ(25,"li",18),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.onStepChange(1))}),e._UZ(26,"input",27),e.TgZ(27,"label",28)(28,"div",21),e._UZ(29,"i",29),e.TgZ(30,"div")(31,"div",23),e._uU(32," Book for Other"),e.qZA(),e.TgZ(33,"div",24),e._uU(34,"If you are not patient!"),e.qZA()()(),e.O4$(),e.TgZ(35,"svg",25),e._UZ(36,"path",26),e.qZA()()()()()(),e.kcU(),e.TgZ(37,"mat-step",15)(38,"div",30)(39,"div",31)(40,"input",32),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.userExistCheck("exist-user"))}),e.qZA(),e.TgZ(41,"label",33),e._uU(42,"Already Exist"),e.qZA()(),e.TgZ(43,"div",31)(44,"input",34),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.userExistCheck("new-user"))}),e.qZA(),e.TgZ(45,"label",35),e._uU(46,"New Patient"),e.qZA()()(),e.TgZ(47,"div",36),e.YNc(48,q,8,1,"div",0),e.TgZ(49,"div",36)(50,"form",37)(51,"div",38)(52,"div",39)(53,"div",40)(54,"label",41),e._uU(55," Full Name "),e.qZA(),e._UZ(56,"input",42),e.YNc(57,T,2,0,"p",43),e.YNc(58,O,2,0,"p",43),e.YNc(59,i,2,0,"p",43),e.qZA()(),e.TgZ(60,"div",39)(61,"div",40)(62,"label",44),e._uU(63," Age "),e.qZA(),e._UZ(64,"input",45),e.YNc(65,M,2,0,"p",43),e.YNc(66,F,2,0,"p",43),e.qZA()(),e.TgZ(67,"div",39)(68,"div",40)(69,"label",46),e._uU(70," Patient Mobile No "),e.qZA(),e._UZ(71,"input",47),e.YNc(72,G,2,0,"p",43),e.YNc(73,R,2,0,"p",43),e.qZA()(),e.TgZ(74,"div",39)(75,"div",40)(76,"label",48),e._uU(77," Select gender "),e.qZA(),e.TgZ(78,"select",49)(79,"option",50),e._uU(80,"Select gender "),e.qZA(),e.YNc(81,J,2,2,"option",51),e.qZA(),e.YNc(82,W,2,0,"p",52),e.qZA()(),e.TgZ(83,"div",39)(84,"div",40)(85,"label",53),e._uU(86," Select blood group "),e.qZA(),e.TgZ(87,"select",54)(88,"option",50),e._uU(89,"Select blood group "),e.qZA(),e.TgZ(90,"option",55),e._uU(91,"A+ "),e.qZA(),e.TgZ(92,"option",56),e._uU(93,"A- "),e.qZA(),e.TgZ(94,"option",57),e._uU(95,"B+ "),e.qZA(),e.TgZ(96,"option",58),e._uU(97,"B- "),e.qZA(),e.TgZ(98,"option",59),e._uU(99,"o+ "),e.qZA(),e.TgZ(100,"option",60),e._uU(101,"o- "),e.qZA(),e.TgZ(102,"option",61),e._uU(103,"Ab+ "),e.qZA(),e.TgZ(104,"option",62),e._uU(105,"Ab- "),e.qZA(),e.TgZ(106,"option",63),e._uU(107,"others "),e.qZA()(),e.YNc(108,K,2,0,"p",52),e.qZA()()()()()(),e.TgZ(109,"div",64)(110,"button",65),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.onStepChange(0))}),e._uU(111,"Back"),e.qZA(),e.TgZ(112,"button",66),e.NdJ("click",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.createNewPatient())}),e.YNc(113,Y,3,0,"div",67),e.YNc(114,Q,1,0,"span",68),e.qZA()()(),e.TgZ(115,"mat-step",15)(116,"app-booking-review",69),e.NdJ("gotToBack",function(){e.CHM(n);const s=e.oxw();return e.KtG(s.onStepChange(0))}),e.qZA()()()()()}if(2&p){const n=e.oxw();let c,s,x,I,Z,A,E,S,w;e.xp6(8),e.Q6J("selectedIndex",n.activeTab),e.xp6(2),e.Q6J("stepControl",n.firstFormGroup),e.xp6(1),e.Q6J("formGroup",n.bookingForm),e.xp6(9),e.hij(" ",n.stepLoading?"Loading...":"Book for Self",""),e.xp6(17),e.Q6J("stepControl",n.thirdFormGroup),e.xp6(11),e.Q6J("ngIf",n.isExistUser),e.xp6(2),e.Q6J("formGroup",n.createPatientForm),e.xp6(7),e.Q6J("ngIf",n.formSubmitted&&(null==(c=n.createPatientForm.get("patientName"))?null:c.touched)&&(null==(c=n.createPatientForm.get("patientName"))?null:c.hasError("required"))),e.xp6(1),e.Q6J("ngIf",n.formSubmitted&&(null==(s=n.createPatientForm.get("patientName"))?null:s.touched)&&(null==(s=n.createPatientForm.get("patientName"))?null:s.hasError("pattern"))),e.xp6(1),e.Q6J("ngIf",n.formSubmitted&&(null==(x=n.createPatientForm.get("patientName"))?null:x.touched)&&(null==(x=n.createPatientForm.get("patientName"))?null:x.hasError("invalidName"))),e.xp6(6),e.Q6J("ngIf",n.formSubmitted&&(null==(I=n.createPatientForm.get("age"))?null:I.touched)&&(null==(I=n.createPatientForm.get("age"))?null:I.hasError("required"))),e.xp6(1),e.Q6J("ngIf",n.formSubmitted&&(null==(Z=n.createPatientForm.get("age"))?null:Z.touched)&&(null==(Z=n.createPatientForm.get("age"))?null:Z.hasError("pattern"))),e.xp6(6),e.Q6J("ngIf",n.formSubmitted&&(null==(A=n.createPatientForm.get("patientMobileNo"))?null:A.touched)&&(null==(A=n.createPatientForm.get("patientMobileNo"))?null:A.hasError("required"))),e.xp6(1),e.Q6J("ngIf",n.formSubmitted&&(null==(E=n.createPatientForm.get("patientMobileNo"))?null:E.touched)&&(null==(E=n.createPatientForm.get("patientMobileNo"))?null:E.hasError("pattern"))),e.xp6(8),e.Q6J("ngForOf",n.genderList),e.xp6(1),e.Q6J("ngIf",n.formSubmitted&&(null==(S=n.createPatientForm.get("gender"))?null:S.touched)&&"0"===(null==(S=n.createPatientForm.get("gender"))?null:S.value)),e.xp6(26),e.Q6J("ngIf",n.formSubmitted&&(null==(w=n.createPatientForm.get("bloodGroup"))?null:w.touched)&&"0"===(null==(w=n.createPatientForm.get("bloodGroup"))?null:w.value)),e.xp6(5),e.Q6J("ngIf",0==n.btnLoader),e.xp6(1),e.Q6J("ngIf",1==n.btnLoader),e.xp6(1),e.Q6J("stepControl",n.fourFormGroup),e.xp6(1),e.Q6J("bookingInfo",n.bookingInfo)}}let $=(()=>{class p{constructor(n,c,s,x,I,Z,A,E){this.dialogRef=n,this.doctorData=c,this.fb=s,this.UserinfoStateService=x,this.TosterService=I,this.PatientProfileService=Z,this.NormalAuth=A,this.dialog=E,this.activeTab=0,this.formSubmitted=!1,this.createNewPatientInfo={},this.alreadyExistPatient={},this.isNewUser=!1,this.isExistUser=!0,this.btnLoader=!1,this.userPatientList=[],this.genderList=[],this.stepLoading=!1}ngOnInit(){this.genderList=r.v.getEnumList(a.Y0);let n=this.NormalAuth.authInfo()?.id;n&&(this.UserinfoStateService.getUserPatientInfo(n,"patient"),this.UserinfoStateService.getProfileInfo(n,"patient")),this.UserinfoStateService.getData().pipe((0,P.w)(c=>(this.profileInfo=c,this.loadForm(),c?this.UserinfoStateService.getUserPatientData().pipe((0,d.U)(s=>s.map(x=>({name:x.patientName,id:x.id})))):(0,m.of)([])))).subscribe(c=>{this.userPatientList=c})}loadForm(){this.bookingForm=this.fb.group({bookMyself:[""],bookOther:[""],patientName:[""],age:[""],mobile:[""]}),this.createPatientForm=this.fb.group({isSelf:[!1,t.kI.required],patientName:["",[t.kI.required,t.kI.minLength(3),o.AG]],patientProfileId:[""],age:["",[t.kI.required,t.kI.pattern(/^[1-9][0-9]{0,2}$/)]],gender:["0",t.kI.required],bloodGroup:["0",t.kI.required],patientMobileNo:["",[t.kI.required,t.kI.pattern(/^(?:88)?[0-9]{11}$/),t.kI.minLength(11),t.kI.maxLength(11)]],patientEmail:[this.profileInfo?.email||"admin@gmail.com",t.kI.required],createdBy:[this.profileInfo.fullName,t.kI.required],creatorEntityId:[this.profileInfo.id,t.kI.required]})}onStepChange(n,c){0===n&&(this.activeTab=n),2===n&&(this.stepLoading=!0,this.formSubmitted=!0,this.bookingInfo={doctorProfileId:this.profileInfo?.id,doctorName:this.doctorData?.doctorDetails.fullName,doctorCode:this.doctorData?.doctorDetails.doctorCode,patientProfileId:this.alreadyExistPatient?.id?this.alreadyExistPatient?.id:this.createNewPatientInfo.id?this.createNewPatientInfo?.id:this.profileInfo?.id,patientName:this.alreadyExistPatient?.patientName?this.alreadyExistPatient?.patientName:this.createNewPatientInfo?.patientName?this.createNewPatientInfo?.patientName:this.profileInfo?.fullName,patientCode:this.alreadyExistPatient?.patientCode?this.alreadyExistPatient?.patientCode:this.createNewPatientInfo?.patientCode?this.createNewPatientInfo?.patientCode:this.profileInfo?.patientCode,patientMobileNo:this.alreadyExistPatient?.patientMobileNo?this.alreadyExistPatient?.patientMobileNo:this.createNewPatientInfo?.patientMobileNo?this.createNewPatientInfo?.patientMobileNo:this.profileInfo?.mobileNo,patientEmail:this.alreadyExistPatient?.patientEmail?this.alreadyExistPatient?.patientEmail:this.createNewPatientInfo?.patientEmail?this.createNewPatientInfo?.patientEmail:this.profileInfo.email||"admin@gmail.com",doctorFee:100,agentFee:0,platformFee:0,totalAppointmentFee:100,appointmentStatus:1,appointmentPaymentStatus:2,appointmentCreatorId:this.profileInfo?.id},this.profileInfo&&"self"===c?(this.formSubmitted=!0,this.PatientProfileService.update({id:this.profileInfo?.id,patientName:this.profileInfo.fullName,patientCode:this.profileInfo.patientCode,patientEmail:this.profileInfo.email?this.profileInfo.email:"admin@gmail.com",patientMobileNo:this.profileInfo.mobileNo}).subscribe(I=>{this.stepLoading=!1,this.activeTab=n})):this.activeTab=n),1===n&&(this.activeTab=n)}getSinglePatientData(n){n.target.value&&this.UserinfoStateService.getUserPatientData().subscribe(c=>c.find(s=>{s.id==n.target.value&&(this.alreadyExistPatient=s,this.createPatientForm.patchValue({patientProfileId:s.id,age:s.age,gender:s.gender,bloodGroup:s.bloodGroup,patientMobileNo:s.patientMobileNo,patientEmail:s.patientEmail,patientName:s.patientName,createdBy:s.createdBy,creatorEntityId:s.creatorEntityId}))}))}userExistCheck(n){switch(this.createPatientForm.get("patientName")?.reset(),this.createPatientForm.get("age")?.reset(),this.createPatientForm.get("gender")?.reset(),this.createPatientForm.get("bloodGroup")?.reset(),this.createPatientForm.get("patientMobileNo")?.reset(),n){case"new-user":return this.isNewUser=!0,void(this.isExistUser=!1);case"exist-user":return this.isNewUser=!1,void(this.isExistUser=!0)}}createNewPatient(){if(this.formSubmitted=!0,this.createPatientForm.valid)if(this.isNewUser)try{this.btnLoader=!0,this.PatientProfileService.create(this.createPatientForm.value).subscribe(n=>{n.patientCode&&n.patientMobileNo&&this.PatientProfileService.getByPhoneAndCode(n.patientCode,n.patientMobileNo).subscribe(c=>{this.createNewPatientInfo=c,this.TosterService.customToast("Your patient is created!","success"),this.UserinfoStateService.getUserPatientInfo(this.profileInfo.id,"patient"),this.onStepChange(2,"others"),this.btnLoader=!1})})}catch{this.TosterService.customToast("Something wrong! Please retry","error")}else this.onStepChange(2);else this.TosterService.customToast("Please field all the required fields","warning")}}return p.\u0275fac=function(n){return new(n||p)(e.Y36(v.so),e.Y36(v.WI),e.Y36(t.qu),e.Y36(_.Z),e.Y36(g.G),e.Y36(u.j),e.Y36(f.e),e.Y36(v.uw))},p.\u0275cmp=e.Xpm({type:p,selectors:[["app-live-consult-booking-dialog"]],decls:3,vars:3,consts:[[4,"ngIf"],["class","p-8",4,"ngIf"],[1,"bg-primary","h-[150px]","w-full","flex","flex-col","justify-center","items-center"],["src","assets/SoowGood-Logo.png","alt","logo",1,"max-w-[200px]"],[1,"p-8","flex","justify-center","items-center","flex-col"],["routerLink","/login",1,"text-blue-500","font-bold",3,"click"],["routerLink","/signup",1,"text-blue-500","font-bold",3,"click"],[1,"p-8"],[1,"flex","justify-between","py-4","px-6","border-b-[1px]","items-center"],[1,"dashbord-heading-text"],[1,"mr-1","text-[18px]","fa-solid","fa-calendar"],[1,"btn-secondary-light",3,"click"],[1,"w-full","px-8","pt-5","pb-10"],[1,"mx-auto",3,"selectedIndex"],["stepper",""],[3,"stepControl"],[3,"formGroup"],[1,"grid","grid-row-2","w-full","gap-6"],[3,"click"],["type","radio","formControlName","bookMyself","id","bookMyself","value","bookMyself","required","",1,"hidden","peer"],["for","bookMyself",1,"inline-flex","items-center","justify-between","w-full","p-5","text-gray-500","bg-white","border","border-gray-200","rounded-lg","cursor-pointer","peer-checked:border-secondary","peer-checked:text-secondary","hover:text-gray-600","hover:bg-gray-100"],[1,"flex","items-center","gap-3"],[1,"fa-solid","fa-person","text-[44px]"],[1,"w-full","text-lg","font-semibold"],[1,"w-full"],["aria-hidden","true","xmlns","http://www.w3.org/2000/svg","fill","none","viewBox","0 0 14 10",1,"w-5","h-5","ml-3"],["stroke","currentColor","stroke-linecap","round","stroke-linejoin","round","stroke-width","2","d","M1 5h12m0 0L9 1m4 4L9 9"],["type","radio","formControlName","bookOther","id","bookOther","value","bookOther",1,"hidden","peer"],["for","bookOther",1,"inline-flex","items-center","justify-between","w-full","p-5","text-gray-500","bg-white","border","border-gray-200","rounded-lg","cursor-pointer","peer-checked:border-secondary","peer-checked:text-secondary","hover:text-gray-600","hover:bg-gray-100"],[1,"fa-solid","fa-people-robbery","text-[44px]"],[1,"flex","gap-4"],[1,"flex","items-center","px-4","border","border-gray-200","rounded","dark:border-gray-700"],["checked","","id","bordered-radio-2","type","radio","value","","name","bordered-radio",1,"w-4","h-4","text-blue-600","bg-gray-100","border-gray-300","focus:ring-0","dark:bg-gray-700","dark:border-gray-600",3,"click"],["for","bordered-radio-2",1,"w-full","py-2","ml-2","text-sm","font-medium","text-gray-900","dark:text-gray-300"],["id","bordered-radio-1","type","radio","value","","name","bordered-radio",1,"w-4","h-4","text-blue-600","bg-gray-100","border-gray-300","focus:ring-0","dark:bg-gray-700","dark:border-gray-600",3,"click"],["for","bordered-radio-1",1,"w-full","py-2","ml-2","text-sm","font-medium","text-gray-900","dark:text-gray-300"],[1,"pt-5"],[1,"w-full",3,"formGroup"],[1,"-mx-3","flex","flex-wrap"],[1,"w-full","px-3","sm:w-1/2"],[1,"mb-5"],["for","name",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","formControlName","patientName","type","text","name","patientName","id","patientName","placeholder","Full Name",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["class","text-red-600 text-sm",4,"ngIf"],["for","age",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","maxlength","3","minlength","1","formControlName","age","id","age","placeholder","Age",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["for","patientMobileNo",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["autocomplete","off","maxlength","11","minlength","11","formControlName","patientMobileNo","id","patientMobileNo","placeholder","Patient Mobile No",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-1.5","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["for","date",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["formControlName","gender","name","gender","id","gender",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-2","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["value","0",1,"font-semibold","text-gray-500"],[3,"value",4,"ngFor","ngForOf"],["class","text-[14px] text-red-600",4,"ngIf"],["for","bloodGroup",1,"mb-2","block","font-medium","text-[14px]","text-[#07074D]"],["formControlName","bloodGroup","name","bloodGroup","id","bloodGroup",1,"w-full","rounded-md","border","border-[#e0e0e0]","bg-white","py-2","px-3","text-base","font-normal","text-[14px]","text-[#6B7280]","outline-none","focus:border-[#6A64F1]","focus:shadow-md"],["value","A+",1,"font-semibold","text-gray-500"],["value","A-",1,"font-semibold","text-gray-500"],["value","B+",1,"font-semibold","text-gray-500"],["value","B-",1,"font-semibold","text-gray-500"],["value","o+",1,"font-semibold","text-gray-500"],["value","o-",1,"font-semibold","text-gray-500"],["value","Ab+",1,"font-semibold","text-gray-500"],["value","Ab-",1,"font-semibold","text-gray-500"],["value","others",1,"font-semibold","text-gray-500"],[1,"flex","gap-5"],[1,"btn-secondary","py-2","mt-6",3,"click"],[1,"btn-secondary","bg-primary","py-2","mt-6",3,"click"],["class","flex items-center gap-1 text-white group-hover:text-primary",4,"ngIf"],["class","loading loading-dots loading-md",4,"ngIf"],[3,"bookingInfo","gotToBack"],["for","",1,"label"],[1,"form_input",3,"input"],["value",""],[3,"value"],[1,"text-red-600","text-sm"],[1,"text-[14px]","text-red-600"],[1,"flex","items-center","gap-1","text-white","group-hover:text-primary"],[1,"loading","loading-dots","loading-md"]],template:function(n,c){1&n&&(e.YNc(0,y,15,0,"div",0),e.YNc(1,B,5,0,"div",1),e.YNc(2,z,117,21,"div",0)),2&n&&(e.Q6J("ngIf",!c.doctorData.isAuthUser),e.xp6(1),e.Q6J("ngIf",!c.doctorData.userAccess),e.xp6(1),e.Q6J("ngIf",c.doctorData.isAuthUser&&c.doctorData.userAccess))},dependencies:[C.sg,C.O5,U.rH,t._Y,t.YN,t.Kr,t.Fj,t.EJ,t._,t.JJ,t.JL,t.Q7,t.wO,t.nD,t.sg,t.u,N.C0,N.Vq,L.p],styles:[".mat-horizontal-stepper-header-container{display:none!important}  .mat-horizontal-content-container{padding:0!important}input[type=radio][_ngcontent-%COMP%]:checked + .radio-card[_ngcontent-%COMP%]{background:#006c93;color:#fff}"]}),p})()},6516:(D,b,l)=>{l.d(b,{Vn:()=>a,Is:()=>_,vs:()=>u,Y0:()=>N,UE:()=>y,Ix:()=>T});var t=l(8481),v=(()=>{return(i=v||(v={}))[i.Paid=1]="Paid",i[i.Due=2]="Due",v;var i})();(0,t.Uoq)(v);var d=(()=>{return(i=d||(d={}))[i.Pending=1]="Pending",i[i.Confirmed=2]="Confirmed",i[i.InProgress=3]="InProgress",i[i.Completed=4]="Completed",i[i.Cancelled=5]="Cancelled",d;var i})();(0,t.Uoq)(d);var a=(()=>{return(i=a||(a={}))[i.New=1]="New",i[i.Followup=2]="Followup",i[i.ReportShow=3]="ReportShow",i[i.Emargency=4]="Emargency",a;var i})();(0,t.Uoq)(a);var o=(()=>{return(i=o||(o={}))[i.ProfilePicture=1]="ProfilePicture",i[i.DoctorDegreeDoc=2]="DoctorDegreeDoc",i[i.DoctIdentityDoc=3]="DoctIdentityDoc",i[i.DoctorSpecialityDoc=4]="DoctorSpecialityDoc",i[i.Prescription=5]="Prescription",i[i.PatientLabreport=6]="PatientLabreport",o;var i})();(0,t.Uoq)(o);var _=(()=>{return(i=_||(_={}))[i.Chamber=1]="Chamber",i[i.Online=2]="Online",i[i.PhysicalVisit=3]="PhysicalVisit",i[i.OnDemand=4]="OnDemand",_;var i})();(0,t.Uoq)(_);var u=(()=>{return(i=u||(u={}))[i.Dr=1]="Dr",i[i.AsstProfDr=2]="AsstProfDr",i[i.AssocProfDr=3]="AssocProfDr",i[i.ProfDr=4]="ProfDr",u;var i})();(0,t.Uoq)(u);var C=(()=>{return(i=C||(C={}))[i.Doctor=1]="Doctor",i[i.Agent=2]="Agent",i[i.Patient=3]="Patient",i[i.Hospital=4]="Hospital",C;var i})();(0,t.Uoq)(C);var N=(()=>{return(i=N||(N={}))[i.Male=1]="Male",i[i.Female=2]="Female",i[i.Others=3]="Others",N;var i})();(0,t.Uoq)(N);var y=(()=>{return(i=y||(y={}))[i.Single=1]="Single",i[i.Maried=2]="Maried",y;var i})();(0,t.Uoq)(y);var k=(()=>{return(i=k||(k={}))[i.New=0]="New",i[i.Send=1]="Send",i[i.Varified=2]="Varified",i[i.Cancel=3]="Cancel",i[i.TimeExpired=4]="TimeExpired",k;var i})();(0,t.Uoq)(k);var T=(()=>{return(i=T||(T={}))[i.Regular=1]="Regular",i[i.Occasional=2]="Occasional",T;var i})();(0,t.Uoq)(T)},9466:(D,b,l)=>{l.d(b,{H:()=>P});var t=l(4650),v=l(8481);let P=(()=>{class d{constructor(a){this.restService=a,this.apiName="Default",this.create=(r,o)=>this.restService.request({method:"POST",url:"/api/app/appointment",body:r},{apiName:this.apiName,...o}),this.get=(r,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/${r}`},{apiName:this.apiName,...o}),this.getAppCountByScheduleIdSessionId=(r,o,e)=>this.restService.request({method:"GET",url:"/api/app/appointment/app-count-by-schedule-id-session-id",params:{scheduleId:r,sessionId:o}},{apiName:this.apiName,...e}),this.getAppointmentCountForDoctorWithSearchFilter=(r,o,e)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-count-for-doctor-with-search-filter/${r}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline}},{apiName:this.apiName,...e}),this.getAppointmentCountForPatientWithSearchFilter=(r,o,e)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-count-for-patient-with-search-filter/${r}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline}},{apiName:this.apiName,...e}),this.getAppointmentListByDoctorId=(r,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-doctor-id/${r}`},{apiName:this.apiName,...o}),this.getAppointmentListByPatientId=(r,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-by-patient-id/${r}`},{apiName:this.apiName,...o}),this.getAppointmentListForDoctorWithSearchFilter=(r,o,e,_)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-for-doctor-with-search-filter/${r}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline,offset:e.offset,limit:e.limit,pageNo:e.pageNo,pageSize:e.pageSize,sortBy:e.sortBy,sortOrder:e.sortOrder,isDesc:e.isDesc}},{apiName:this.apiName,..._}),this.getAppointmentListForPatientWithSearchFilter=(r,o,e,_)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-for-patient-with-search-filter/${r}`,params:{name:o.name,consultancyType:o.consultancyType,specialityId:o.specialityId,specializationId:o.specializationId,appointmentStatus:o.appointmentStatus,fromDate:o.fromDate,toDate:o.toDate,isCurrentOnline:o.isCurrentOnline,offset:e.offset,limit:e.limit,pageNo:e.pageNo,pageSize:e.pageSize,sortBy:e.sortBy,sortOrder:e.sortOrder,isDesc:e.isDesc}},{apiName:this.apiName,..._}),this.getAppointmentListWithSearchFilter=(r,o,e,_,g,u,f,C,U)=>this.restService.request({method:"GET",url:`/api/app/appointment/appointment-list-with-search-filter/${r}`,params:{name:o,consultancy:e,fromDate:_,toDate:g,aptStatus:u,skipValue:f,currentLimit:C}},{apiName:this.apiName,...U}),this.getLeftBookingCountBySessionIdAndScheduleId=(r,o,e)=>this.restService.request({method:"GET",url:"/api/app/appointment/left-booking-count",params:{sessionId:r,scheduleId:o}},{apiName:this.apiName,...e}),this.getList=r=>this.restService.request({method:"GET",url:"/api/app/appointment"},{apiName:this.apiName,...r}),this.getListAppointmentListByAdmin=r=>this.restService.request({method:"GET",url:"/api/app/appointment/appointment-list-by-admin"},{apiName:this.apiName,...r}),this.getPatientListByDoctorId=(r,o)=>this.restService.request({method:"GET",url:`/api/app/appointment/patient-list-by-doctor-id/${r}`},{apiName:this.apiName,...o}),this.update=(r,o)=>this.restService.request({method:"PUT",url:"/api/app/appointment",body:r},{apiName:this.apiName,...o}),this.updateAppointmentPaymentStatus=(r,o,e)=>this.restService.request({method:"PUT",url:`/api/app/appointment/appointment-payment-status/${o}`,params:{appCode:r}},{apiName:this.apiName,...e}),this.updateCallConsultationAppointment=(r,o)=>this.restService.request({method:"PUT",url:"/api/app/appointment/call-consultation-appointment",params:{appCode:r}},{apiName:this.apiName,...o}),this.testAcTokenByInput=(r,o)=>this.restService.request({method:"POST",responseType:"text",url:"/api/app/appointment/test-ac-token",body:r},{apiName:this.apiName,...o}),this.testBuildTokenWithUIDByInput=(r,o)=>this.restService.request({method:"POST",responseType:"text",url:"/api/app/appointment/test-build-token-with-uID",body:r},{apiName:this.apiName,...o}),this.testBuildTokenWithUserAccountBy_appIdAnd_appCertificateAnd_channelNameAnd_account=(r,o,e,_,g)=>this.restService.request({method:"POST",responseType:"text",url:`/api/app/appointment/test-build-token-with-user-account/${r}`,params:{_appCertificate:o,_channelName:e,_account:_}},{apiName:this.apiName,...g})}}return d.\u0275fac=function(a){return new(a||d)(t.LFG(v.vgb))},d.\u0275prov=t.Yz7({token:d,factory:d.\u0275fac,providedIn:"root"}),d})()},5318:(D,b,l)=>{l.d(b,{P:()=>P});var t=l(4650),v=l(8481);let P=(()=>{class d{constructor(a){this.restService=a,this.apiName="Default",this.create=(r,o)=>this.restService.request({method:"POST",url:"/api/app/doctor-schedule",body:r},{apiName:this.apiName,...o}),this.createFromMobileApp=(r,o)=>this.restService.request({method:"POST",url:"/api/app/doctor-schedule/from-mobile-app",body:r},{apiName:this.apiName,...o}),this.deleteSession=(r,o)=>this.restService.request({method:"DELETE",url:`/api/app/doctor-schedule/${r}/session`},{apiName:this.apiName,...o}),this.get=(r,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/${r}`},{apiName:this.apiName,...o}),this.getDetailsScheduleListByDoctorId=(r,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/details-schedule-list-by-doctor-id/${r}`},{apiName:this.apiName,...o}),this.getList=r=>this.restService.request({method:"GET",url:"/api/app/doctor-schedule"},{apiName:this.apiName,...r}),this.getListByDoctorIdList=(r,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/by-doctor-id-list/${r}`},{apiName:this.apiName,...o}),this.getScheduleListByDoctorId=(r,o)=>this.restService.request({method:"GET",url:`/api/app/doctor-schedule/schedule-list-by-doctor-id/${r}`},{apiName:this.apiName,...o}),this.update=(r,o)=>this.restService.request({method:"PUT",url:"/api/app/doctor-schedule",body:r},{apiName:this.apiName,...o}),this.updateFromMobileApp=(r,o)=>this.restService.request({method:"PUT",url:"/api/app/doctor-schedule/from-mobile-app",body:r},{apiName:this.apiName,...o})}}return d.\u0275fac=function(a){return new(a||d)(t.LFG(v.vgb))},d.\u0275prov=t.Yz7({token:d,factory:d.\u0275fac,providedIn:"root"}),d})()},470:(D,b,l)=>{l.d(b,{p:()=>o});var t=l(4650),v=l(1873),P=l(6516),d=l(2381),m=l(9466),a=l(3472),r=l(6895);let o=(()=>{class e{constructor(g,u,f){this.ToasterService=g,this.AppointmentService=u,this.sslCommerzService=f,this.gotToBack=new t.vpe,this.sslInputDto={applicantCode:"",examFee:100,serviceCharge:0,customAmount:10,isCustomAmount:!1},this.hasValidCode=!1,this.sslCInputDto={},this.loading=!1,this.appointmentType=v.v.getEnumList(P.Vn)}getTitle(g,u){if("appointmentType"==u)return this.appointmentType.find(f=>f.id==g)}createAppointmentAndPayment(){this.loading=!0,console.log(this.bookingInfo);try{this.AppointmentService.create(this.bookingInfo).subscribe({next:g=>{this.payWithSslCommerz(g.appointmentCode),localStorage.setItem("patientAppointmentCode",JSON.stringify(g.appointmentCode))},error:g=>{console.log(g),this.ToasterService.customToast(String(g.error.error.message),"error"),this.loading=!1}})}catch(g){console.log(g)}}payWithSslCommerz(g){if(this.bookingInfo){const u={};u.applicationCode=g,u.totalAmount=String(this.bookingInfo.totalAppointmentFee),u.transactionId="",this.sslCommerzService.initiateTestPayment(u).subscribe({next:f=>{f&&"SUCCESS"===f.status&&f.gatewayPageURL?(window.location.href=f.gatewayPageURL,this.loading=!1):this.ToasterService.customToast("Unable to initiate your payment request. Please contact our support team.","error")},error:f=>{this.ToasterService.customToast(String(f.error.error.message),"error"),this.loading=!1}})}else this.ToasterService.customToast("Booking info not found","error")}}return e.\u0275fac=function(g){return new(g||e)(t.Y36(d.G),t.Y36(m.H),t.Y36(a.r))},e.\u0275cmp=t.Xpm({type:e,selectors:[["app-booking-review"]],inputs:{bookingInfo:"bookingInfo"},outputs:{gotToBack:"gotToBack"},decls:45,vars:10,consts:[[1,"w-full","my-5","p-4","bg-white","border","border-gray-200","rounded-lg","shadow","sm:p-6","dark:bg-gray-800","dark:border-gray-700","m-auto"],[1,"text-base","font-semibold","text-gray-900","md:text-xl","dark:text-white"],[1,"text-sm","font-normal","text-gray-500","dark:text-gray-400"],[1,"relative","overflow-x-auto"],[1,"w-full","mt-6","text-sm","text-left","text-gray-500","dark:text-gray-400"],[1,"bg-white","border-b","dark:bg-gray-800","dark:border-gray-700"],["scope","row",1,"py-2","font-medium","text-gray-900","whitespace-nowrap","dark:text-white"],[1,"py-2"],[1,"bg-white","dark:bg-gray-800"],[1,"flex","gap-5"],[1,"btn-secondary","bg-primary","mt-6","text-[15px]","tracking-[1px]","py-1","w-full",3,"click"],[1,"btn-secondary","mt-6","text-[16px]","tracking-[1px]","py-2","w-full",3,"click"]],template:function(g,u){if(1&g&&(t.TgZ(0,"div",0)(1,"h5",1),t._uU(2),t.qZA(),t.TgZ(3,"p",2),t._uU(4,"General Medicine"),t.qZA(),t.TgZ(5,"div")(6,"div",3)(7,"table",4)(8,"tbody")(9,"tr",5)(10,"th",6),t._uU(11," Patient name: "),t.qZA(),t.TgZ(12,"td",7),t._uU(13),t.qZA()(),t.TgZ(14,"tr",5)(15,"th",6),t._uU(16," Appointment Day : "),t.qZA(),t.TgZ(17,"td",7),t._uU(18),t.qZA()(),t.TgZ(19,"tr",5)(20,"th",6),t._uU(21," Appointment Date : "),t.qZA(),t.TgZ(22,"td",7),t._uU(23),t.ALo(24,"date"),t.qZA()(),t.TgZ(25,"tr",5)(26,"th",6),t._uU(27," Appointment Type : "),t.qZA(),t.TgZ(28,"td",7),t._uU(29),t.qZA()(),t.TgZ(30,"tr",5)(31,"th",6),t._uU(32," Hospital name : "),t.qZA(),t.TgZ(33,"td",7),t._uU(34),t.qZA()(),t.TgZ(35,"tr",8)(36,"th",6),t._uU(37," Doctor Fee : "),t.qZA(),t.TgZ(38,"td",7),t._uU(39),t.qZA()()()(),t.TgZ(40,"div",9)(41,"button",10),t.NdJ("click",function(){return u.gotToBack.emit(1)}),t._uU(42,"Back"),t.qZA(),t.TgZ(43,"button",11),t.NdJ("click",function(){return u.createAppointmentAndPayment()}),t._uU(44),t.qZA()()()()()),2&g){let f;t.xp6(2),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.doctorName," "),t.xp6(11),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.patientName," "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.scheduleDayofWeek," "),t.xp6(5),t.hij(" ",t.lcZ(24,8,null==u.bookingInfo?null:u.bookingInfo.appointmentDate)," "),t.xp6(6),t.hij(" ",null==(f=u.getTitle(null==u.bookingInfo?null:u.bookingInfo.appointmentType,"appointmentType"))?null:f.name," "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.doctorChamberId," "),t.xp6(5),t.hij(" ",null==u.bookingInfo?null:u.bookingInfo.totalAppointmentFee," tk. "),t.xp6(5),t.Oqu(u.loading?"Loading...":"Confirm & Pay")}},dependencies:[r.uU]}),e})()},1873:(D,b,l)=>{l.d(b,{v:()=>P});class t{constructor(){}static getNamesAndValues(m){return t.getNames(m).map(a=>({name:a,value:m[a]}))}static getNames(m){return Object.keys(m).filter(a=>"number"==typeof m[a]||m[a]===a||m[m[a]]?.toString()!==a)}static getValues(m){return t.getNames(m).map(a=>m[a])}}var v=l(4650);let P=(()=>{class d{static getEnumList(a){let r=[];return t.getNamesAndValues(a).forEach(e=>{let _={id:e.value.toString(),name:e.name};r.push(_)}),r}}return d.\u0275fac=function(a){return new(a||d)},d.\u0275prov=v.Yz7({token:d,factory:d.\u0275fac,providedIn:"root"}),d})()},2537:(D,b,l)=>{function P(m){const a=m.value;return a&&(!/^[a-zA-Z]+(?: [a-zA-Z]+)*[0-9]*$/.test(a)||a.length<3)?{invalidName:!0}:null}l.d(b,{AG:()=>P,dN:()=>d});class d{static startsWithUppercase(a){const r=a.value;return r&&!/^[A-Z]/.test(r)?{startsWithUppercase:!0}:null}static isAtLeast6Characters(a){const r=a.value;return r&&r.length<6?{isAtLeast6Characters:!0}:null}static includesSpecialCharacter(a){const r=a.value;return r&&!/.*[!@#$%^&*()_+{}\[\]:;<>,.?~\\\-=/|]/.test(r)?{includesSpecialCharacter:!0}:null}static includesNumber(a){const r=a.value;return r&&!/.*[0-9]/.test(r)?{includesNumber:!0}:null}static matchValidator(a){const r=a.get("password")?.value,o=a.get("confirmPassword")?.value;if(!o?.length)return null;if(o.length<6)a.get("confirmPassword")?.setErrors({minLength:!0});else{if(r===o)return null;a.get("confirmPassword")?.setErrors({mismatch:!0})}}}}}]);